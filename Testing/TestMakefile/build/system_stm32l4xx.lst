ARM GAS  /tmp/ccwDEb4g.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemInit:
  27              	.LFB130:
  28              		.file 1 "Src/system_stm32l4xx.c"
   1:Src/system_stm32l4xx.c **** /**
   2:Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32l4xx.c ****   *
   7:Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l4xx.c ****   *   user application:
   9:Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Src/system_stm32l4xx.c ****   *
  13:Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l4xx.c ****   *
  17:Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Src/system_stm32l4xx.c ****   *
  21:Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32l4xx.c ****   *
  25:Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32l4xx.c ****   *=============================================================================
  27:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /tmp/ccwDEb4g.s 			page 2


  31:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Src/system_stm32l4xx.c ****   *=============================================================================
  66:Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Src/system_stm32l4xx.c ****   * @attention
  68:Src/system_stm32l4xx.c ****   *
  69:Src/system_stm32l4xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  70:Src/system_stm32l4xx.c ****   * All rights reserved.</center></h2>
  71:Src/system_stm32l4xx.c ****   *
  72:Src/system_stm32l4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  73:Src/system_stm32l4xx.c ****   * the "License"; You may not use this file except in compliance with the
  74:Src/system_stm32l4xx.c ****   * License. You may obtain a copy of the License at:
  75:Src/system_stm32l4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  76:Src/system_stm32l4xx.c ****   *
  77:Src/system_stm32l4xx.c ****   ******************************************************************************
  78:Src/system_stm32l4xx.c ****   */
  79:Src/system_stm32l4xx.c **** 
  80:Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  81:Src/system_stm32l4xx.c ****   * @{
  82:Src/system_stm32l4xx.c ****   */
  83:Src/system_stm32l4xx.c **** 
  84:Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  85:Src/system_stm32l4xx.c ****   * @{
  86:Src/system_stm32l4xx.c ****   */
  87:Src/system_stm32l4xx.c **** 
ARM GAS  /tmp/ccwDEb4g.s 			page 3


  88:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  89:Src/system_stm32l4xx.c ****   * @{
  90:Src/system_stm32l4xx.c ****   */
  91:Src/system_stm32l4xx.c **** 
  92:Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  93:Src/system_stm32l4xx.c **** 
  94:Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
  95:Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
  96:Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
  97:Src/system_stm32l4xx.c **** 
  98:Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
  99:Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 100:Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 101:Src/system_stm32l4xx.c **** 
 102:Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 103:Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 104:Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 105:Src/system_stm32l4xx.c **** 
 106:Src/system_stm32l4xx.c **** /**
 107:Src/system_stm32l4xx.c ****   * @}
 108:Src/system_stm32l4xx.c ****   */
 109:Src/system_stm32l4xx.c **** 
 110:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
 111:Src/system_stm32l4xx.c ****   * @{
 112:Src/system_stm32l4xx.c ****   */
 113:Src/system_stm32l4xx.c **** 
 114:Src/system_stm32l4xx.c **** /**
 115:Src/system_stm32l4xx.c ****   * @}
 116:Src/system_stm32l4xx.c ****   */
 117:Src/system_stm32l4xx.c **** 
 118:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 119:Src/system_stm32l4xx.c ****   * @{
 120:Src/system_stm32l4xx.c ****   */
 121:Src/system_stm32l4xx.c **** 
 122:Src/system_stm32l4xx.c **** /************************* Miscellaneous Configuration ************************/
 123:Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 124:Src/system_stm32l4xx.c ****      Internal SRAM. */
 125:Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 126:Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field.
 127:Src/system_stm32l4xx.c ****                                    This value must be a multiple of 0x200. */
 128:Src/system_stm32l4xx.c **** /******************************************************************************/
 129:Src/system_stm32l4xx.c **** /**
 130:Src/system_stm32l4xx.c ****   * @}
 131:Src/system_stm32l4xx.c ****   */
 132:Src/system_stm32l4xx.c **** 
 133:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 134:Src/system_stm32l4xx.c ****   * @{
 135:Src/system_stm32l4xx.c ****   */
 136:Src/system_stm32l4xx.c **** 
 137:Src/system_stm32l4xx.c **** /**
 138:Src/system_stm32l4xx.c ****   * @}
 139:Src/system_stm32l4xx.c ****   */
 140:Src/system_stm32l4xx.c **** 
 141:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 142:Src/system_stm32l4xx.c ****   * @{
 143:Src/system_stm32l4xx.c ****   */
 144:Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
ARM GAS  /tmp/ccwDEb4g.s 			page 4


 145:Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 146:Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 147:Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 148:Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 149:Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 150:Src/system_stm32l4xx.c ****                variable is updated automatically.
 151:Src/system_stm32l4xx.c ****   */
 152:Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 153:Src/system_stm32l4xx.c **** 
 154:Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 155:Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 156:Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 157:Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 158:Src/system_stm32l4xx.c **** /**
 159:Src/system_stm32l4xx.c ****   * @}
 160:Src/system_stm32l4xx.c ****   */
 161:Src/system_stm32l4xx.c **** 
 162:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 163:Src/system_stm32l4xx.c ****   * @{
 164:Src/system_stm32l4xx.c ****   */
 165:Src/system_stm32l4xx.c **** 
 166:Src/system_stm32l4xx.c **** /**
 167:Src/system_stm32l4xx.c ****   * @}
 168:Src/system_stm32l4xx.c ****   */
 169:Src/system_stm32l4xx.c **** 
 170:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 171:Src/system_stm32l4xx.c ****   * @{
 172:Src/system_stm32l4xx.c ****   */
 173:Src/system_stm32l4xx.c **** 
 174:Src/system_stm32l4xx.c **** /**
 175:Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 176:Src/system_stm32l4xx.c ****   * @param  None
 177:Src/system_stm32l4xx.c ****   * @retval None
 178:Src/system_stm32l4xx.c ****   */
 179:Src/system_stm32l4xx.c **** 
 180:Src/system_stm32l4xx.c **** void SystemInit(void)
 181:Src/system_stm32l4xx.c **** {
  29              		.loc 1 181 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 182:Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 183:Src/system_stm32l4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 184:Src/system_stm32l4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 184 0
  35 0000 1149     		ldr	r1, .L3
 185:Src/system_stm32l4xx.c ****   #endif
 186:Src/system_stm32l4xx.c **** 
 187:Src/system_stm32l4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 188:Src/system_stm32l4xx.c ****   /* Set MSION bit */
 189:Src/system_stm32l4xx.c ****   RCC->CR |= RCC_CR_MSION;
  36              		.loc 1 189 0
  37 0002 124B     		ldr	r3, .L3+4
 184:Src/system_stm32l4xx.c ****   #endif
  38              		.loc 1 184 0
  39 0004 D1F88820 		ldr	r2, [r1, #136]
ARM GAS  /tmp/ccwDEb4g.s 			page 5


  40 0008 42F47002 		orr	r2, r2, #15728640
 181:Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
  41              		.loc 1 181 0
  42 000c 10B4     		push	{r4}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 4, -4
 184:Src/system_stm32l4xx.c ****   #endif
  46              		.loc 1 184 0
  47 000e C1F88820 		str	r2, [r1, #136]
  48              		.loc 1 189 0
  49 0012 1A68     		ldr	r2, [r3]
 190:Src/system_stm32l4xx.c **** 
 191:Src/system_stm32l4xx.c ****   /* Reset CFGR register */
 192:Src/system_stm32l4xx.c ****   RCC->CFGR = 0x00000000U;
  50              		.loc 1 192 0
  51 0014 0020     		movs	r0, #0
 189:Src/system_stm32l4xx.c **** 
  52              		.loc 1 189 0
  53 0016 42F00102 		orr	r2, r2, #1
  54 001a 1A60     		str	r2, [r3]
  55              		.loc 1 192 0
  56 001c 9860     		str	r0, [r3, #8]
 193:Src/system_stm32l4xx.c **** 
 194:Src/system_stm32l4xx.c ****   /* Reset HSEON, CSSON , HSION, and PLLON bits */
 195:Src/system_stm32l4xx.c ****   RCC->CR &= 0xEAF6FFFFU;
  57              		.loc 1 195 0
  58 001e 1A68     		ldr	r2, [r3]
  59 0020 22F0A852 		bic	r2, r2, #352321536
  60 0024 22F41022 		bic	r2, r2, #589824
 196:Src/system_stm32l4xx.c **** 
 197:Src/system_stm32l4xx.c ****   /* Reset PLLCFGR register */
 198:Src/system_stm32l4xx.c ****   RCC->PLLCFGR = 0x00001000U;
  61              		.loc 1 198 0
  62 0028 4FF48054 		mov	r4, #4096
 195:Src/system_stm32l4xx.c **** 
  63              		.loc 1 195 0
  64 002c 1A60     		str	r2, [r3]
  65              		.loc 1 198 0
  66 002e DC60     		str	r4, [r3, #12]
 199:Src/system_stm32l4xx.c **** 
 200:Src/system_stm32l4xx.c ****   /* Reset HSEBYP bit */
 201:Src/system_stm32l4xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  67              		.loc 1 201 0
  68 0030 1A68     		ldr	r2, [r3]
 202:Src/system_stm32l4xx.c **** 
 203:Src/system_stm32l4xx.c ****   /* Disable all interrupts */
 204:Src/system_stm32l4xx.c ****   RCC->CIER = 0x00000000U;
 205:Src/system_stm32l4xx.c **** 
 206:Src/system_stm32l4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 207:Src/system_stm32l4xx.c **** #ifdef VECT_TAB_SRAM
 208:Src/system_stm32l4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 209:Src/system_stm32l4xx.c **** #else
 210:Src/system_stm32l4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  69              		.loc 1 210 0
  70 0032 4FF00064 		mov	r4, #134217728
 201:Src/system_stm32l4xx.c **** 
ARM GAS  /tmp/ccwDEb4g.s 			page 6


  71              		.loc 1 201 0
  72 0036 22F48022 		bic	r2, r2, #262144
  73 003a 1A60     		str	r2, [r3]
 204:Src/system_stm32l4xx.c **** 
  74              		.loc 1 204 0
  75 003c 9861     		str	r0, [r3, #24]
  76              		.loc 1 210 0
  77 003e 8C60     		str	r4, [r1, #8]
 211:Src/system_stm32l4xx.c **** #endif
 212:Src/system_stm32l4xx.c **** }
  78              		.loc 1 212 0
  79 0040 5DF8044B 		ldr	r4, [sp], #4
  80              	.LCFI1:
  81              		.cfi_restore 4
  82              		.cfi_def_cfa_offset 0
  83 0044 7047     		bx	lr
  84              	.L4:
  85 0046 00BF     		.align	2
  86              	.L3:
  87 0048 00ED00E0 		.word	-536810240
  88 004c 00100240 		.word	1073876992
  89              		.cfi_endproc
  90              	.LFE130:
  92              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  93              		.align	1
  94              		.p2align 2,,3
  95              		.global	SystemCoreClockUpdate
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	SystemCoreClockUpdate:
 102              	.LFB131:
 213:Src/system_stm32l4xx.c **** 
 214:Src/system_stm32l4xx.c **** /**
 215:Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 216:Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 217:Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 218:Src/system_stm32l4xx.c ****   *         other parameters.
 219:Src/system_stm32l4xx.c ****   *
 220:Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 221:Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 222:Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 223:Src/system_stm32l4xx.c ****   *
 224:Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 225:Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 226:Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 227:Src/system_stm32l4xx.c ****   *
 228:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 229:Src/system_stm32l4xx.c ****   *
 230:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 231:Src/system_stm32l4xx.c ****   *
 232:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 233:Src/system_stm32l4xx.c ****   *
 234:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 235:Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 236:Src/system_stm32l4xx.c ****   *
ARM GAS  /tmp/ccwDEb4g.s 			page 7


 237:Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 239:Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 240:Src/system_stm32l4xx.c ****   *
 241:Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 243:Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 244:Src/system_stm32l4xx.c ****   *
 245:Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 246:Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 247:Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 248:Src/system_stm32l4xx.c ****   *              have wrong result.
 249:Src/system_stm32l4xx.c ****   *
 250:Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 251:Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 252:Src/system_stm32l4xx.c ****   *
 253:Src/system_stm32l4xx.c ****   * @param  None
 254:Src/system_stm32l4xx.c ****   * @retval None
 255:Src/system_stm32l4xx.c ****   */
 256:Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 257:Src/system_stm32l4xx.c **** {
 103              		.loc 1 257 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL0:
 258:Src/system_stm32l4xx.c ****   uint32_t tmp = 0U, msirange = 0U, pllvco = 0U, pllr = 2U, pllsource = 0U, pllm = 2U;
 259:Src/system_stm32l4xx.c **** 
 260:Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 261:Src/system_stm32l4xx.c ****   if((RCC->CR & RCC_CR_MSIRGSEL) == RESET)
 109              		.loc 1 261 0
 110 0000 254B     		ldr	r3, .L21
 262:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 263:Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 264:Src/system_stm32l4xx.c ****   }
 265:Src/system_stm32l4xx.c ****   else
 266:Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 267:Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 268:Src/system_stm32l4xx.c ****   }
 269:Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 270:Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
 271:Src/system_stm32l4xx.c **** 
 272:Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 273:Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 111              		.loc 1 273 0
 112 0002 2549     		ldr	r1, .L21
 261:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 113              		.loc 1 261 0
 114 0004 1A68     		ldr	r2, [r3]
 270:Src/system_stm32l4xx.c **** 
 115              		.loc 1 270 0
 116 0006 2548     		ldr	r0, .L21+4
 261:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 117              		.loc 1 261 0
 118 0008 1207     		lsls	r2, r2, #28
 263:Src/system_stm32l4xx.c ****   }
ARM GAS  /tmp/ccwDEb4g.s 			page 8


 119              		.loc 1 263 0
 120 000a 54BF     		ite	pl
 121 000c D3F89430 		ldrpl	r3, [r3, #148]
 267:Src/system_stm32l4xx.c ****   }
 122              		.loc 1 267 0
 123 0010 1B68     		ldrmi	r3, [r3]
 124              		.loc 1 273 0
 125 0012 8A68     		ldr	r2, [r1, #8]
 263:Src/system_stm32l4xx.c ****   }
 126              		.loc 1 263 0
 127 0014 54BF     		ite	pl
 128 0016 C3F30323 		ubfxpl	r3, r3, #8, #4
 129              	.LVL1:
 267:Src/system_stm32l4xx.c ****   }
 130              		.loc 1 267 0
 131 001a C3F30313 		ubfxmi	r3, r3, #4, #4
 132              	.LVL2:
 133              		.loc 1 273 0
 134 001e 02F00C02 		and	r2, r2, #12
 135 0022 082A     		cmp	r2, #8
 270:Src/system_stm32l4xx.c **** 
 136              		.loc 1 270 0
 137 0024 50F82330 		ldr	r3, [r0, r3, lsl #2]
 138              	.LVL3:
 139              		.loc 1 273 0
 140 0028 0FD0     		beq	.L9
 141 002a 0C2A     		cmp	r2, #12
 142 002c 0FD0     		beq	.L10
 143 002e 1C49     		ldr	r1, .L21+8
 144 0030 042A     		cmp	r2, #4
 145 0032 08BF     		it	eq
 146 0034 0B46     		moveq	r3, r1
 147              	.LVL4:
 148              	.L11:
 274:Src/system_stm32l4xx.c ****   {
 275:Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 276:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 277:Src/system_stm32l4xx.c ****       break;
 278:Src/system_stm32l4xx.c **** 
 279:Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 280:Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 281:Src/system_stm32l4xx.c ****       break;
 282:Src/system_stm32l4xx.c **** 
 283:Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 284:Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 285:Src/system_stm32l4xx.c ****       break;
 286:Src/system_stm32l4xx.c **** 
 287:Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 288:Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 289:Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 290:Src/system_stm32l4xx.c ****          */
 291:Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 292:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 293:Src/system_stm32l4xx.c **** 
 294:Src/system_stm32l4xx.c ****       switch (pllsource)
 295:Src/system_stm32l4xx.c ****       {
 296:Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
ARM GAS  /tmp/ccwDEb4g.s 			page 9


 297:Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 298:Src/system_stm32l4xx.c ****           break;
 299:Src/system_stm32l4xx.c **** 
 300:Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 301:Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 302:Src/system_stm32l4xx.c ****           break;
 303:Src/system_stm32l4xx.c **** 
 304:Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 305:Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 306:Src/system_stm32l4xx.c ****           break;
 307:Src/system_stm32l4xx.c ****       }
 308:Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 309:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 310:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 311:Src/system_stm32l4xx.c ****       break;
 312:Src/system_stm32l4xx.c **** 
 313:Src/system_stm32l4xx.c ****     default:
 314:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 315:Src/system_stm32l4xx.c ****       break;
 316:Src/system_stm32l4xx.c ****   }
 317:Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 318:Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 319:Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 149              		.loc 1 319 0
 150 0036 184A     		ldr	r2, .L21
 151 0038 1A48     		ldr	r0, .L21+12
 152 003a 9268     		ldr	r2, [r2, #8]
 153              	.LVL5:
 320:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 321:Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 154              		.loc 1 321 0
 155 003c 1A49     		ldr	r1, .L21+16
 319:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 156              		.loc 1 319 0
 157 003e C2F30312 		ubfx	r2, r2, #4, #4
 158              	.LVL6:
 159 0042 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 160              		.loc 1 321 0
 161 0044 D340     		lsrs	r3, r3, r2
 162 0046 0B60     		str	r3, [r1]
 163 0048 7047     		bx	lr
 164              	.LVL7:
 165              	.L9:
 285:Src/system_stm32l4xx.c **** 
 166              		.loc 1 285 0
 167 004a 184B     		ldr	r3, .L21+20
 168              	.LVL8:
 169 004c F3E7     		b	.L11
 170              	.LVL9:
 171              	.L10:
 291:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 172              		.loc 1 291 0
 173 004e C868     		ldr	r0, [r1, #12]
 174              	.LVL10:
 292:Src/system_stm32l4xx.c **** 
 175              		.loc 1 292 0
 176 0050 CA68     		ldr	r2, [r1, #12]
ARM GAS  /tmp/ccwDEb4g.s 			page 10


 291:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 177              		.loc 1 291 0
 178 0052 00F00301 		and	r1, r0, #3
 179              	.LVL11:
 292:Src/system_stm32l4xx.c **** 
 180              		.loc 1 292 0
 181 0056 C2F30212 		ubfx	r2, r2, #4, #3
 294:Src/system_stm32l4xx.c ****       {
 182              		.loc 1 294 0
 183 005a 0229     		cmp	r1, #2
 292:Src/system_stm32l4xx.c **** 
 184              		.loc 1 292 0
 185 005c 02F10102 		add	r2, r2, #1
 186              	.LVL12:
 294:Src/system_stm32l4xx.c ****       {
 187              		.loc 1 294 0
 188 0060 12D0     		beq	.L13
 189 0062 0329     		cmp	r1, #3
 190 0064 14D1     		bne	.L20
 301:Src/system_stm32l4xx.c ****           break;
 191              		.loc 1 301 0
 192 0066 114B     		ldr	r3, .L21+20
 193              	.LVL13:
 194 0068 B3FBF2F3 		udiv	r3, r3, r2
 195              	.LVL14:
 196              	.L15:
 308:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 197              		.loc 1 308 0
 198 006c 0A4A     		ldr	r2, .L21
 199              	.LVL15:
 200 006e D168     		ldr	r1, [r2, #12]
 201              	.LVL16:
 309:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 202              		.loc 1 309 0
 203 0070 D268     		ldr	r2, [r2, #12]
 204              	.LVL17:
 205 0072 C2F34162 		ubfx	r2, r2, #25, #2
 206              	.LVL18:
 207 0076 0132     		adds	r2, r2, #1
 308:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 208              		.loc 1 308 0
 209 0078 C1F30621 		ubfx	r1, r1, #8, #7
 210              	.LVL19:
 309:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 211              		.loc 1 309 0
 212 007c 5200     		lsls	r2, r2, #1
 308:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 213              		.loc 1 308 0
 214 007e 03FB01F3 		mul	r3, r3, r1
 310:Src/system_stm32l4xx.c ****       break;
 215              		.loc 1 310 0
 216 0082 B3FBF2F3 		udiv	r3, r3, r2
 311:Src/system_stm32l4xx.c **** 
 217              		.loc 1 311 0
 218 0086 D6E7     		b	.L11
 219              	.LVL20:
 220              	.L13:
ARM GAS  /tmp/ccwDEb4g.s 			page 11


 297:Src/system_stm32l4xx.c ****           break;
 221              		.loc 1 297 0
 222 0088 054B     		ldr	r3, .L21+8
 223              	.LVL21:
 224 008a B3FBF2F3 		udiv	r3, r3, r2
 225              	.LVL22:
 298:Src/system_stm32l4xx.c **** 
 226              		.loc 1 298 0
 227 008e EDE7     		b	.L15
 228              	.LVL23:
 229              	.L20:
 305:Src/system_stm32l4xx.c ****           break;
 230              		.loc 1 305 0
 231 0090 B3FBF2F3 		udiv	r3, r3, r2
 232              	.LVL24:
 306:Src/system_stm32l4xx.c ****       }
 233              		.loc 1 306 0
 234 0094 EAE7     		b	.L15
 235              	.L22:
 236 0096 00BF     		.align	2
 237              	.L21:
 238 0098 00100240 		.word	1073876992
 239 009c 00000000 		.word	.LANCHOR0
 240 00a0 0024F400 		.word	16000000
 241 00a4 00000000 		.word	.LANCHOR2
 242 00a8 00000000 		.word	.LANCHOR1
 243 00ac 00127A00 		.word	8000000
 244              		.cfi_endproc
 245              	.LFE131:
 247              		.global	MSIRangeTable
 248              		.global	APBPrescTable
 249              		.global	AHBPrescTable
 250              		.global	SystemCoreClock
 251              		.section	.data.SystemCoreClock,"aw",%progbits
 252              		.align	2
 253              		.set	.LANCHOR1,. + 0
 256              	SystemCoreClock:
 257 0000 00093D00 		.word	4000000
 258              		.section	.rodata.AHBPrescTable,"a",%progbits
 259              		.align	2
 260              		.set	.LANCHOR2,. + 0
 263              	AHBPrescTable:
 264 0000 00       		.byte	0
 265 0001 00       		.byte	0
 266 0002 00       		.byte	0
 267 0003 00       		.byte	0
 268 0004 00       		.byte	0
 269 0005 00       		.byte	0
 270 0006 00       		.byte	0
 271 0007 00       		.byte	0
 272 0008 01       		.byte	1
 273 0009 02       		.byte	2
 274 000a 03       		.byte	3
 275 000b 04       		.byte	4
 276 000c 06       		.byte	6
 277 000d 07       		.byte	7
 278 000e 08       		.byte	8
ARM GAS  /tmp/ccwDEb4g.s 			page 12


 279 000f 09       		.byte	9
 280              		.section	.rodata.APBPrescTable,"a",%progbits
 281              		.align	2
 284              	APBPrescTable:
 285 0000 00       		.byte	0
 286 0001 00       		.byte	0
 287 0002 00       		.byte	0
 288 0003 00       		.byte	0
 289 0004 01       		.byte	1
 290 0005 02       		.byte	2
 291 0006 03       		.byte	3
 292 0007 04       		.byte	4
 293              		.section	.rodata.MSIRangeTable,"a",%progbits
 294              		.align	2
 295              		.set	.LANCHOR0,. + 0
 298              	MSIRangeTable:
 299 0000 A0860100 		.word	100000
 300 0004 400D0300 		.word	200000
 301 0008 801A0600 		.word	400000
 302 000c 00350C00 		.word	800000
 303 0010 40420F00 		.word	1000000
 304 0014 80841E00 		.word	2000000
 305 0018 00093D00 		.word	4000000
 306 001c 00127A00 		.word	8000000
 307 0020 0024F400 		.word	16000000
 308 0024 00366E01 		.word	24000000
 309 0028 0048E801 		.word	32000000
 310 002c 006CDC02 		.word	48000000
 311              		.text
 312              	.Letext0:
 313              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 314              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 315              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 316              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 317              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 318              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 319              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 320              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 321              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccwDEb4g.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l4xx.c
     /tmp/ccwDEb4g.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccwDEb4g.s:26     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccwDEb4g.s:87     .text.SystemInit:0000000000000048 $d
     /tmp/ccwDEb4g.s:93     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccwDEb4g.s:101    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccwDEb4g.s:238    .text.SystemCoreClockUpdate:0000000000000098 $d
     /tmp/ccwDEb4g.s:298    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
     /tmp/ccwDEb4g.s:284    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccwDEb4g.s:263    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccwDEb4g.s:256    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccwDEb4g.s:252    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccwDEb4g.s:259    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccwDEb4g.s:281    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccwDEb4g.s:294    .rodata.MSIRangeTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
