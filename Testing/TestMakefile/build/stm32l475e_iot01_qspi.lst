ARM GAS  /tmp/ccVjWqsE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l475e_iot01_qspi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.QSPI_AutoPollingMemReady.isra.0,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	QSPI_AutoPollingMemReady.isra.0:
  26              	.LFB151:
  27              		.file 1 "Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c"
   1:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
   2:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   ******************************************************************************
   3:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @file    stm32l475e_iot01_qspi.c
   4:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @author  MCD Application Team
   5:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief   This file includes a standard driver for the MX25R6435F QSPI 
   6:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *          memory mounted on STM32L475E IOT01 board.
   7:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   @verbatim
   8:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   ==============================================================================
   9:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****                      ##### How to use this driver #####
  10:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   ==============================================================================  
  11:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   [..] 
  12:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****    (#) This driver is used to drive the MX25R6435F QSPI external 
  13:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        memory mounted on STM32L475E IOT01 board.
  14:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        
  15:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****    (#) This driver need a specific component driver (MX25R6435F) to be included with.
  16:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  17:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****    (#) Initialization steps:
  18:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) Initialize the QPSI external memory using the BSP_QSPI_Init() function. This 
  19:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             function includes the MSP layer hardware resources initialization and the
  20:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             QSPI interface with the external memory. The BSP_QSPI_DeInit() can be used 
  21:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             to deactivate the QSPI interface.
  22:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
  23:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****    (#) QSPI memory operations
  24:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) QSPI memory can be accessed with read/write operations once it is
  25:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             initialized.
  26:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             Read/write operation can be performed with AHB access using the functions
  27:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             BSP_QSPI_Read()/BSP_QSPI_Write().
  28:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) The function to the QSPI memory in memory-mapped mode is possible after 
  29:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             the call of the function BSP_QSPI_EnableMemoryMappedMode().
  30:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) The function BSP_QSPI_GetInfo() returns the configuration of the QSPI memory. 
  31:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             (see the QSPI memory data sheet)
ARM GAS  /tmp/ccVjWqsE.s 			page 2


  32:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) Perform erase block operation using the function BSP_QSPI_Erase_Block() and by
  33:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             specifying the block address. You can perform an erase operation of the whole 
  34:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             chip by calling the function BSP_QSPI_Erase_Chip(). 
  35:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) The function BSP_QSPI_GetStatus() returns the current status of the QSPI memory. 
  36:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             (see the QSPI memory data sheet)
  37:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) Perform erase sector operation using the function BSP_QSPI_Erase_Sector()
  38:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             which is not blocking. So the function BSP_QSPI_GetStatus() should be used
  39:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             to check if the memory is busy, and the functions BSP_QSPI_SuspendErase()/
  40:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             BSP_QSPI_ResumeErase() can be used to perform other operations during the 
  41:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             sector erase.
  42:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****        (++) Deep power down of the QSPI memory is managed with the call of the functions
  43:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****             BSP_QSPI_EnterDeepPowerDown()/BSP_QSPI_LeaveDeepPowerDown()
  44:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   @endverbatim
  45:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   ******************************************************************************
  46:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @attention
  47:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *
  48:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  49:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * All rights reserved.</center></h2>
  50:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *
  51:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  52:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * the "License"; You may not use this file except in compliance with the
  53:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * License. You may obtain a copy of the License at:
  54:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *                        opensource.org/licenses/BSD-3-Clause
  55:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *
  56:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   ******************************************************************************
  57:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  58:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  59:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /* Includes ------------------------------------------------------------------*/
  60:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** #include "stm32l475e_iot01_qspi.h"
  61:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  62:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @addtogroup BSP
  63:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
  64:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  65:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  66:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @addtogroup STM32L475E_IOT01
  67:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
  68:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  69:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  70:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @defgroup STM32L475E_IOT01_QSPI QSPI
  71:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
  72:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  73:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  74:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /* Private constants --------------------------------------------------------*/ 
  75:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @defgroup STM32L475E_IOT01_QSPI_Private_Constants QSPI Private Constants
  76:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
  77:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  78:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** #define QSPI_QUAD_DISABLE       0x0
  79:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** #define QSPI_QUAD_ENABLE        0x1
  80:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  81:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** #define QSPI_HIGH_PERF_DISABLE  0x0
  82:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** #define QSPI_HIGH_PERF_ENABLE   0x1
  83:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
  84:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @}
  85:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  86:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /* Private variables ---------------------------------------------------------*/
  87:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  88:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @defgroup STM32L475E_IOT01_QSPI_Private_Variables QSPI Private Variables
ARM GAS  /tmp/ccVjWqsE.s 			page 3


  89:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
  90:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  91:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** QSPI_HandleTypeDef QSPIHandle;
  92:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  93:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
  94:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @}
  95:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
  96:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  97:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  98:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /* Private functions ---------------------------------------------------------*/
  99:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 100:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @defgroup STM32L475E_IOT01_QSPI_Private_Functions QSPI Private Functions
 101:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
 102:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 103:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_ResetMemory        (QSPI_HandleTypeDef *hqspi);
 104:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_WriteEnable        (QSPI_HandleTypeDef *hqspi);
 105:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout);
 106:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_QuadMode           (QSPI_HandleTypeDef *hqspi, uint8_t Operation);
 107:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_HighPerfMode       (QSPI_HandleTypeDef *hqspi, uint8_t Operation);
 108:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 109:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 110:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @}
 111:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 112:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 113:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /* Exported functions ---------------------------------------------------------*/
 114:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 115:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @addtogroup STM32L475E_IOT01_QSPI_Exported_Functions
 116:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
 117:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 118:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 119:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 120:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Initializes the QSPI interface.
 121:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 122:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 123:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Init(void)
 124:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** { 
 125:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 126:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 127:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Call the DeInit function to reset the driver */
 128:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 129:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 130:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 131:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 132:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****         
 133:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* System level initialization */
 134:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   BSP_QSPI_MspInit();
 135:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 136:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* QSPI initialization */
 137:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ClockPrescaler     = 2; /* QSPI clock = 80MHz / (ClockPrescaler+1) = 26.67MHz */
 138:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.FifoThreshold      = 4;
 139:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_NONE;
 140:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.FlashSize          = POSITION_VAL(MX25R6435F_FLASH_SIZE) - 1;
 141:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 142:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 143:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 144:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 145:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 4


 146:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 147:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 148:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 149:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* QSPI memory reset */
 150:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_ResetMemory(&QSPIHandle) != QSPI_OK)
 151:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 152:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_NOT_SUPPORTED;
 153:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 154:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****  
 155:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* QSPI quad enable */
 156:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_QuadMode(&QSPIHandle, QSPI_QUAD_ENABLE) != QSPI_OK)
 157:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 158:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 159:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 160:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****  
 161:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* High performance mode enable */
 162:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_HighPerfMode(&QSPIHandle, QSPI_HIGH_PERF_ENABLE) != QSPI_OK)
 163:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 164:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 165:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 166:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 167:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Re-configure the clock for the high performance mode */
 168:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ClockPrescaler = 1; /* QSPI clock = 80MHz / (ClockPrescaler+1) = 40MHz */
 169:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 170:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 171:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 172:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 173:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 174:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 175:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 176:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 177:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 178:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 179:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  De-Initializes the QSPI interface.
 180:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 181:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 182:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_DeInit(void)
 183:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** { 
 184:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 185:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 186:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Call the DeInit function to reset the driver */
 187:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 188:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 189:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 190:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 191:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 192:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* System level De-initialization */
 193:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   BSP_QSPI_MspDeInit();
 194:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 195:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 196:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 197:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 198:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 199:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Reads an amount of data from the QSPI memory.
 200:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  pData    : Pointer to data to be read
 201:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  ReadAddr : Read start address
 202:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Size     : Size of data to read    
ARM GAS  /tmp/ccVjWqsE.s 			page 5


 203:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 204:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 205:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Read(uint8_t* pData, uint32_t ReadAddr, uint32_t Size)
 206:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 207:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 208:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 209:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the read command */
 210:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode    = QSPI_INSTRUCTION_1_LINE;
 211:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 212:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
 213:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 214:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address            = ReadAddr;
 215:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode  = QSPI_ALTERNATE_BYTES_4_LINES;
 216:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 217:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
 218:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 219:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 220:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData             = Size;
 221:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode            = QSPI_DDR_MODE_DISABLE;
 222:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle   = QSPI_DDR_HHC_ANALOG_DELAY;
 223:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode           = QSPI_SIOO_INST_EVERY_CMD;
 224:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 225:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the command */
 226:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 227:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 228:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 229:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 230:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 231:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Reception of the data */
 232:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, pData, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 233:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 234:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 235:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 236:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 237:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 238:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 239:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 240:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 241:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Writes an amount of data to the QSPI memory.
 242:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  pData     : Pointer to data to be written
 243:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  WriteAddr : Write start address
 244:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Size      : Size of data to write    
 245:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 246:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 247:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Write(uint8_t* pData, uint32_t WriteAddr, uint32_t Size)
 248:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 249:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 250:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   uint32_t end_addr, current_size, current_addr;
 251:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 252:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Calculation of the size between the write address and the end of the page */
 253:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   current_size = MX25R6435F_PAGE_SIZE - (WriteAddr % MX25R6435F_PAGE_SIZE);
 254:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 255:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check if the size of the data is less than the remaining place in the page */
 256:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (current_size > Size)
 257:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 258:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     current_size = Size;
 259:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
ARM GAS  /tmp/ccVjWqsE.s 			page 6


 260:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 261:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the adress variables */
 262:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   current_addr = WriteAddr;
 263:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   end_addr = WriteAddr + Size;
 264:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 265:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the program command */
 266:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 267:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = QUAD_PAGE_PROG_CMD;
 268:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_4_LINES;
 269:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 270:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 271:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_4_LINES;
 272:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 273:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 274:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 275:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 276:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 277:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Perform the write page by page */
 278:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   do
 279:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 280:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.Address = current_addr;
 281:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.NbData  = current_size;
 282:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 283:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Enable write operations */
 284:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
 285:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 286:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 287:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 288:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 289:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Configure the command */
 290:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 291:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 292:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 293:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 294:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 295:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Transmission of the data */
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (HAL_QSPI_Transmit(&QSPIHandle, pData, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 297:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 298:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 299:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 300:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 301:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Configure automatic polling mode to wait for end of program */  
 302:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (QSPI_AutoPollingMemReady(&QSPIHandle, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 303:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 304:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 305:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 306:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 307:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Update the address and size variables for next page programming */
 308:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     current_addr += current_size;
 309:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     pData += current_size;
 310:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     current_size = ((current_addr + MX25R6435F_PAGE_SIZE) > end_addr) ? (end_addr - current_addr) :
 311:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   } while (current_addr < end_addr);
 312:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 313:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 314:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 315:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 316:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
ARM GAS  /tmp/ccVjWqsE.s 			page 7


 317:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Erases the specified block of the QSPI memory. 
 318:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  BlockAddress : Block address to erase  
 319:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 320:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 321:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Erase_Block(uint32_t BlockAddress)
 322:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 323:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 324:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 325:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the erase command */
 326:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 327:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = BLOCK_ERASE_CMD;
 328:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 329:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 330:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = BlockAddress;
 331:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 332:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 333:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 334:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 335:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 336:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 337:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 338:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
 339:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
 340:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 341:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 342:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 343:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 344:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 345:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 346:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 347:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 348:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 349:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 350:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure automatic polling mode to wait for end of erase */  
 351:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_AutoPollingMemReady(&QSPIHandle, MX25R6435F_BLOCK_ERASE_MAX_TIME) != QSPI_OK)
 352:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 353:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 354:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 355:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 356:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 357:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 358:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 359:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 360:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Erases the specified sector of the QSPI memory. 
 361:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Sector : Sector address to erase (0 to 255) 
 362:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 363:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @note This function is non blocking meaning that sector erase
 364:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *       operation is started but not completed when the function 
 365:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *       returns. Application has to call BSP_QSPI_GetStatus()
 366:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *       to know when the device is available again (i.e. erase operation
 367:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   *       completed).
 368:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 369:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Erase_Sector(uint32_t Sector)
 370:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 371:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 372:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 373:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (Sector >= (uint32_t)(MX25R6435F_FLASH_SIZE/MX25R6435F_SECTOR_SIZE))
ARM GAS  /tmp/ccVjWqsE.s 			page 8


 374:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 375:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 376:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 377:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 378:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the erase command */
 379:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 380:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = SECTOR_ERASE_CMD;
 381:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 382:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 383:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = (Sector * MX25R6435F_SECTOR_SIZE);
 384:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 385:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 386:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 387:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 388:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 389:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 390:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 391:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
 392:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
 393:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 394:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 395:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 396:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 397:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 398:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 399:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 400:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 401:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 402:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 403:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 404:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 405:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 406:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 407:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Erases the entire QSPI memory.
 408:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 409:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 410:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_Erase_Chip(void)
 411:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 412:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 413:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 414:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the erase command */
 415:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 416:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = CHIP_ERASE_CMD;
 417:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 418:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 419:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 420:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 421:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 422:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 423:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 424:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 425:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
 426:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
 427:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 428:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 429:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 430:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
ARM GAS  /tmp/ccVjWqsE.s 			page 9


 431:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 432:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 433:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 434:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 435:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 436:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 437:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure automatic polling mode to wait for end of erase */  
 438:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_AutoPollingMemReady(&QSPIHandle, MX25R6435F_CHIP_ERASE_MAX_TIME) != QSPI_OK)
 439:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 440:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 441:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 442:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 443:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 444:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 445:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 446:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 447:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Reads current status of the QSPI memory.
 448:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 449:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 450:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_GetStatus(void)
 451:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 452:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 453:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   uint8_t reg;
 454:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 455:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the read security register command */
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 459:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 461:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 463:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 464:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 465:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 466:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 467:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the command */
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 469:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 470:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 471:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 472:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 473:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Reception of the data */
 474:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 475:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 476:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 477:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 478:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 479:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check the value of the register */
 480:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if ((reg & (MX25R6435F_SECR_P_FAIL | MX25R6435F_SECR_E_FAIL)) != 0)
 481:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 482:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 483:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 484:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   else if ((reg & (MX25R6435F_SECR_PSB | MX25R6435F_SECR_ESB)) != 0)
 485:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 486:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_SUSPENDED;
 487:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
ARM GAS  /tmp/ccVjWqsE.s 			page 10


 488:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 489:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the read status register command */
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 491:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 492:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the command */
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 494:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 495:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 496:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 497:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 498:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Reception of the data */
 499:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 500:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 501:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 502:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 503:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 504:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check the value of the register */
 505:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if ((reg & MX25R6435F_SR_WIP) != 0)
 506:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 507:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_BUSY;
 508:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 509:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   else
 510:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 511:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_OK;
 512:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 513:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 514:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 515:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 516:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Return the configuration of the QSPI memory.
 517:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  pInfo : pointer on the configuration structure  
 518:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 519:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 520:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_GetInfo(QSPI_Info* pInfo)
 521:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 522:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the structure with the memory configuration */
 523:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->FlashSize          = MX25R6435F_FLASH_SIZE;
 524:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorSize    = MX25R6435F_SECTOR_SIZE;
 525:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorsNumber = (MX25R6435F_FLASH_SIZE/MX25R6435F_SECTOR_SIZE);
 526:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPageSize       = MX25R6435F_PAGE_SIZE;
 527:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPagesNumber    = (MX25R6435F_FLASH_SIZE/MX25R6435F_PAGE_SIZE);
 528:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 529:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 530:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 531:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 532:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 533:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Configure the QSPI in memory-mapped mode
 534:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 535:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 536:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_EnableMemoryMappedMode(void)
 537:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 538:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef      sCommand;
 539:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_MemoryMappedTypeDef sMemMappedCfg;
 540:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 541:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the command for the read instruction */
 542:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode    = QSPI_INSTRUCTION_1_LINE;
 543:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 544:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
ARM GAS  /tmp/ccVjWqsE.s 			page 11


 545:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 546:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode  = QSPI_ALTERNATE_BYTES_4_LINES;
 547:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 548:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
 549:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 550:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 551:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode            = QSPI_DDR_MODE_DISABLE;
 552:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle   = QSPI_DDR_HHC_ANALOG_DELAY;
 553:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode           = QSPI_SIOO_INST_EVERY_CMD;
 554:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 555:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the memory mapped mode */
 556:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sMemMappedCfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 557:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 558:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_MemoryMapped(&QSPIHandle, &sCommand, &sMemMappedCfg) != HAL_OK)
 559:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 560:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 561:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 562:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 563:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 564:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 565:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 566:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 567:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function suspends an ongoing erase command.
 568:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 569:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 570:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_SuspendErase(void)
 571:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 572:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 573:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 574:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check whether the device is busy (erase operation is 
 575:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   in progress).
 576:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 577:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (BSP_QSPI_GetStatus() == QSPI_BUSY)
 578:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 579:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Initialize the erase command */
 580:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 581:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.Instruction       = PROG_ERASE_SUSPEND_CMD;
 582:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 583:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 584:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DataMode          = QSPI_DATA_NONE;
 585:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DummyCycles       = 0;
 586:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 587:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 588:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 589:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 590:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Send the command */
 591:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 592:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 593:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 594:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 595:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 596:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (BSP_QSPI_GetStatus() == QSPI_SUSPENDED)
 597:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 598:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_OK;
 599:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 600:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 601:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
ARM GAS  /tmp/ccVjWqsE.s 			page 12


 602:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 603:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 604:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 605:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 606:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 607:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 608:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function resumes a paused erase command.
 609:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 610:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 611:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_ResumeErase(void)
 612:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 613:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 614:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 615:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check whether the device is in suspended state */
 616:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (BSP_QSPI_GetStatus() == QSPI_SUSPENDED)
 617:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 618:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Initialize the erase command */
 619:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 620:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.Instruction       = PROG_ERASE_RESUME_CMD;
 621:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 622:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 623:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DataMode          = QSPI_DATA_NONE;
 624:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DummyCycles       = 0;
 625:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 626:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 627:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 628:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 629:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /* Send the command */
 630:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 631:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 632:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_ERROR;
 633:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 634:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 635:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     /*
 636:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     When this command is executed, the status register write in progress bit is set to 1, and
 637:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     the flag status register program erase controller bit is set to 0. This command is ignored
 638:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if the device is not in a suspended state.
 639:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     */
 640:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 641:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     if (BSP_QSPI_GetStatus() == QSPI_BUSY)
 642:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 643:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       return QSPI_OK;
 644:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 645:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 646:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 647:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 648:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 649:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 650:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 651:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 652:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 653:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function enter the QSPI memory in deep power down mode.
 654:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 655:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 656:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_EnterDeepPowerDown(void)
 657:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 658:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
ARM GAS  /tmp/ccVjWqsE.s 			page 13


 659:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 660:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the deep power down command */
 661:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 662:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = DEEP_POWER_DOWN_CMD;
 663:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 664:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 665:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 666:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 667:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 668:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 669:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 670:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 671:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 672:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 673:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 674:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 675:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 676:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 677:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* ---          Memory takes 10us max to enter deep power down          --- */
 678:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* --- At least 30us should be respected before leaving deep power down --- */
 679:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 680:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 681:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 682:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 683:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 684:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function leave the QSPI memory from deep power down mode.
 685:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval QSPI memory status
 686:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 687:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** uint8_t BSP_QSPI_LeaveDeepPowerDown(void)
 688:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 689:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 690:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 691:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the erase command */
 692:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 693:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = NO_OPERATION_CMD;
 694:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 695:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 696:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 697:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 698:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 699:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 700:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 701:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 702:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 703:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 704:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 705:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 706:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 707:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 708:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* --- A NOP command is sent to the memory, as the nCS should be low for at least 20 ns --- */
 709:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* ---                  Memory takes 35us min to leave deep power down                  --- */
 710:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 711:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 712:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 713:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 714:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 715:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  Initializes the QSPI MSP.
ARM GAS  /tmp/ccVjWqsE.s 			page 14


 716:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 717:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 718:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** __weak void BSP_QSPI_MspInit(void)
 719:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 720:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 721:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 722:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable the QuadSPI memory interface clock */
 723:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_CLK_ENABLE();
 724:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 725:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Reset the QuadSPI memory interface */
 726:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_FORCE_RESET();
 727:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_RELEASE_RESET();
 728:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 729:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable GPIO clocks */
 730:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 731:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 732:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* QSPI CLK, CS, D0, D1, D2 and D3 GPIO pins configuration  */
 733:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 734:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****                               GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 735:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 736:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pull      = GPIO_NOPULL;
 737:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 738:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 739:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 740:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 741:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 742:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 743:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  De-Initializes the QSPI MSP.
 744:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 745:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 746:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** __weak void BSP_QSPI_MspDeInit(void)
 747:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 748:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 749:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 750:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* QSPI CLK, CS, D0-D3 GPIO pins de-configuration  */
 751:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 752:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 753:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****                               GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 754:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 755:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   HAL_GPIO_DeInit(GPIOE, GPIO_InitStruct.Pin);
 756:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 757:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Reset the QuadSPI memory interface */
 758:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_FORCE_RESET();
 759:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_RELEASE_RESET();
 760:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 761:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Disable the QuadSPI memory interface clock */
 762:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_CLK_DISABLE();
 763:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 764:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 765:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 766:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @}
 767:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 768:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 769:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /** @addtogroup STM32L475E_IOT01_QSPI_Private_Functions 
 770:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @{
 771:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 772:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
ARM GAS  /tmp/ccVjWqsE.s 			page 15


 773:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 774:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function reset the QSPI memory.
 775:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  hqspi : QSPI handle
 776:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 777:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 778:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_ResetMemory(QSPI_HandleTypeDef *hqspi)
 779:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 780:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 781:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 782:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Initialize the reset enable command */
 783:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 784:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = RESET_ENABLE_CMD;
 785:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 786:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 787:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 788:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 789:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 790:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 791:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 792:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 793:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the command */
 794:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 795:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 796:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 797:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 798:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 799:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Send the reset memory command */
 800:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = RESET_MEMORY_CMD;
 801:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 802:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 803:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 804:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 805:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 806:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure automatic polling mode to wait the memory is ready */  
 807:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_AutoPollingMemReady(&QSPIHandle, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 808:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 809:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 810:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 811:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 812:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 813:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 814:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 815:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 816:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function send a Write Enable and wait it is effective.
 817:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  hqspi : QSPI handle
 818:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 819:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 820:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 821:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 822:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef     sCommand;
 823:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_AutoPollingTypeDef sConfig;
 824:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 825:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
ARM GAS  /tmp/ccVjWqsE.s 			page 16


 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 835:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 837:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 838:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 839:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 840:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 841:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure automatic polling mode to wait for write enabling */  
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Match           = MX25R6435F_SR_WEL;
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 848:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction    = READ_STATUS_REG_CMD;
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 851:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_AutoPolling(&QSPIHandle, &sCommand, &sConfig, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL
 853:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 854:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 855:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 856:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 857:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 858:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 859:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 860:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 861:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function read the SR of the memory and wait the EOP.
 862:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  hqspi   : QSPI handle
 863:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Timeout : Timeout for auto-polling
 864:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 865:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 866:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
  28              		.loc 1 866 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 95B0     		sub	sp, sp, #84
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 104
 867:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 868:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef     sCommand;
 869:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_AutoPollingTypeDef sConfig;
 870:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
ARM GAS  /tmp/ccVjWqsE.s 			page 17


 871:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure automatic polling mode to wait for memory ready */  
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 881:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Match           = 0;
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 888:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_AutoPolling(&QSPIHandle, &sCommand, &sConfig, Timeout) != HAL_OK)
  44              		.loc 1 889 0
  45 0004 0346     		mov	r3, r0
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
  46              		.loc 1 872 0
  47 0006 4FF48072 		mov	r2, #256
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  48              		.loc 1 874 0
  49 000a 0020     		movs	r0, #0
  50              	.LVL1:
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
  51              		.loc 1 873 0
  52 000c 0521     		movs	r1, #5
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
  53              		.loc 1 883 0
  54 000e 0124     		movs	r4, #1
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
  55              		.loc 1 872 0
  56 0010 0C92     		str	r2, [sp, #48]
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
  57              		.loc 1 873 0
  58 0012 0691     		str	r1, [sp, #24]
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  59              		.loc 1 874 0
  60 0014 0D90     		str	r0, [sp, #52]
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
  61              		.loc 1 875 0
  62 0016 0E90     		str	r0, [sp, #56]
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
  63              		.loc 1 877 0
  64 0018 0B90     		str	r0, [sp, #44]
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  65              		.loc 1 878 0
  66 001a 1190     		str	r0, [sp, #68]
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
  67              		.loc 1 879 0
  68 001c 1290     		str	r0, [sp, #72]
 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  69              		.loc 1 880 0
ARM GAS  /tmp/ccVjWqsE.s 			page 18


  70 001e 1390     		str	r0, [sp, #76]
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
  71              		.loc 1 882 0
  72 0020 0090     		str	r0, [sp]
 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
  73              		.loc 1 884 0
  74 0022 0490     		str	r0, [sp, #16]
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
  75              		.loc 1 876 0
  76 0024 4FF08077 		mov	r7, #16777216
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  77              		.loc 1 886 0
  78 0028 1026     		movs	r6, #16
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  79              		.loc 1 887 0
  80 002a 4FF48005 		mov	r5, #4194304
  81              		.loc 1 889 0
  82 002e 6A46     		mov	r2, sp
  83 0030 06A9     		add	r1, sp, #24
  84 0032 0648     		ldr	r0, .L3
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
  85              		.loc 1 876 0
  86 0034 0F97     		str	r7, [sp, #60]
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
  87              		.loc 1 883 0
  88 0036 0194     		str	r4, [sp, #4]
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
  89              		.loc 1 885 0
  90 0038 0394     		str	r4, [sp, #12]
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  91              		.loc 1 886 0
  92 003a 0296     		str	r6, [sp, #8]
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
  93              		.loc 1 887 0
  94 003c 0595     		str	r5, [sp, #20]
  95              		.loc 1 889 0
  96 003e FFF7FEFF 		bl	HAL_QSPI_AutoPolling
  97              	.LVL2:
 890:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 891:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 892:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 893:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 894:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 895:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
  98              		.loc 1 895 0
  99 0042 0030     		adds	r0, r0, #0
 100 0044 18BF     		it	ne
 101 0046 0120     		movne	r0, #1
 102 0048 15B0     		add	sp, sp, #84
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 20
 105              		@ sp needed
 106 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 107              	.L4:
 108              		.align	2
 109              	.L3:
 110 004c 00000000 		.word	QSPIHandle
ARM GAS  /tmp/ccVjWqsE.s 			page 19


 111              		.cfi_endproc
 112              	.LFE151:
 114              		.section	.text.BSP_QSPI_Read,"ax",%progbits
 115              		.align	1
 116              		.p2align 2,,3
 117              		.global	BSP_QSPI_Read
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	BSP_QSPI_Read:
 124              	.LFB132:
 206:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 125              		.loc 1 206 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 56
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL3:
 130 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 131              	.LCFI3:
 132              		.cfi_def_cfa_offset 20
 133              		.cfi_offset 4, -20
 134              		.cfi_offset 5, -16
 135              		.cfi_offset 6, -12
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 8FB0     		sub	sp, sp, #60
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 80
 210:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 141              		.loc 1 210 0
 142 0004 4FF48075 		mov	r5, #256
 211:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
 143              		.loc 1 211 0
 144 0008 EB24     		movs	r4, #235
 206:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 145              		.loc 1 206 0
 146 000a 0746     		mov	r7, r0
 214:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode  = QSPI_ALTERNATE_BYTES_4_LINES;
 147              		.loc 1 214 0
 148 000c 0191     		str	r1, [sp, #4]
 215:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 149              		.loc 1 215 0
 150 000e 4FF44040 		mov	r0, #49152
 151              	.LVL4:
 213:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address            = ReadAddr;
 152              		.loc 1 213 0
 153 0012 4FF40051 		mov	r1, #8192
 154              	.LVL5:
 220:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode            = QSPI_DDR_MODE_DISABLE;
 155              		.loc 1 220 0
 156 0016 0A92     		str	r2, [sp, #40]
 212:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 157              		.loc 1 212 0
 158 0018 4FF44062 		mov	r2, #3072
 159              	.LVL6:
 216:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
ARM GAS  /tmp/ccVjWqsE.s 			page 20


 160              		.loc 1 216 0
 161 001c 0023     		movs	r3, #0
 217:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 162              		.loc 1 217 0
 163 001e AA26     		movs	r6, #170
 210:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 164              		.loc 1 210 0
 165 0020 0695     		str	r5, [sp, #24]
 211:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
 166              		.loc 1 211 0
 167 0022 0094     		str	r4, [sp]
 218:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 168              		.loc 1 218 0
 169 0024 4FF04075 		mov	r5, #50331648
 219:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData             = Size;
 170              		.loc 1 219 0
 171 0028 0424     		movs	r4, #4
 212:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 172              		.loc 1 212 0
 173 002a 0792     		str	r2, [sp, #28]
 213:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address            = ReadAddr;
 174              		.loc 1 213 0
 175 002c 0391     		str	r1, [sp, #12]
 215:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 176              		.loc 1 215 0
 177 002e 0890     		str	r0, [sp, #32]
 226:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 178              		.loc 1 226 0
 179 0030 41F28832 		movw	r2, #5000
 180 0034 6946     		mov	r1, sp
 181 0036 0C48     		ldr	r0, .L11
 216:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
 182              		.loc 1 216 0
 183 0038 0493     		str	r3, [sp, #16]
 221:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle   = QSPI_DDR_HHC_ANALOG_DELAY;
 184              		.loc 1 221 0
 185 003a 0B93     		str	r3, [sp, #44]
 222:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode           = QSPI_SIOO_INST_EVERY_CMD;
 186              		.loc 1 222 0
 187 003c 0C93     		str	r3, [sp, #48]
 223:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 188              		.loc 1 223 0
 189 003e 0D93     		str	r3, [sp, #52]
 217:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 190              		.loc 1 217 0
 191 0040 0296     		str	r6, [sp, #8]
 218:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 192              		.loc 1 218 0
 193 0042 0995     		str	r5, [sp, #36]
 219:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData             = Size;
 194              		.loc 1 219 0
 195 0044 0594     		str	r4, [sp, #20]
 226:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 196              		.loc 1 226 0
 197 0046 FFF7FEFF 		bl	HAL_QSPI_Command
 198              	.LVL7:
 199 004a 10B1     		cbz	r0, .L10
ARM GAS  /tmp/ccVjWqsE.s 			page 21


 228:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 200              		.loc 1 228 0
 201 004c 0120     		movs	r0, #1
 238:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 202              		.loc 1 238 0
 203 004e 0FB0     		add	sp, sp, #60
 204              	.LCFI5:
 205              		.cfi_remember_state
 206              		.cfi_def_cfa_offset 20
 207              		@ sp needed
 208 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 209              	.LVL8:
 210              	.L10:
 211              	.LCFI6:
 212              		.cfi_restore_state
 232:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 213              		.loc 1 232 0
 214 0052 3946     		mov	r1, r7
 215 0054 41F28832 		movw	r2, #5000
 216 0058 0348     		ldr	r0, .L11
 217 005a FFF7FEFF 		bl	HAL_QSPI_Receive
 218              	.LVL9:
 228:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 219              		.loc 1 228 0
 220 005e 0030     		adds	r0, r0, #0
 221 0060 18BF     		it	ne
 222 0062 0120     		movne	r0, #1
 238:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 223              		.loc 1 238 0
 224 0064 0FB0     		add	sp, sp, #60
 225              	.LCFI7:
 226              		.cfi_def_cfa_offset 20
 227              		@ sp needed
 228 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 229              	.LVL10:
 230              	.L12:
 231              		.align	2
 232              	.L11:
 233 0068 00000000 		.word	QSPIHandle
 234              		.cfi_endproc
 235              	.LFE132:
 237              		.section	.text.BSP_QSPI_Write,"ax",%progbits
 238              		.align	1
 239              		.p2align 2,,3
 240              		.global	BSP_QSPI_Write
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	BSP_QSPI_Write:
 247              	.LFB133:
 248:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 248              		.loc 1 248 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 144
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL11:
ARM GAS  /tmp/ccVjWqsE.s 			page 22


 253 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 254              	.LCFI8:
 255              		.cfi_def_cfa_offset 36
 256              		.cfi_offset 4, -36
 257              		.cfi_offset 5, -32
 258              		.cfi_offset 6, -28
 259              		.cfi_offset 7, -24
 260              		.cfi_offset 8, -20
 261              		.cfi_offset 9, -16
 262              		.cfi_offset 10, -12
 263              		.cfi_offset 11, -8
 264              		.cfi_offset 14, -4
 253:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 265              		.loc 1 253 0
 266 0004 CEB2     		uxtb	r6, r1
 248:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 267              		.loc 1 248 0
 268 0006 A5B0     		sub	sp, sp, #148
 269              	.LCFI9:
 270              		.cfi_def_cfa_offset 184
 253:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 271              		.loc 1 253 0
 272 0008 C6F58076 		rsb	r6, r6, #256
 273              	.LVL12:
 248:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 274              		.loc 1 248 0
 275 000c 0C46     		mov	r4, r1
 268:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 276              		.loc 1 268 0
 277 000e 4FF44065 		mov	r5, #3072
 278 0012 9642     		cmp	r6, r2
 270:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_4_LINES;
 279              		.loc 1 270 0
 280 0014 4FF00003 		mov	r3, #0
 266:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = QUAD_PAGE_PROG_CMD;
 281              		.loc 1 266 0
 282 0018 4FF48071 		mov	r1, #256
 283              	.LVL13:
 267:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_4_LINES;
 284              		.loc 1 267 0
 285 001c 4FF0380C 		mov	ip, #56
 269:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 286              		.loc 1 269 0
 287 0020 4FF4005E 		mov	lr, #8192
 288 0024 28BF     		it	cs
 289 0026 1646     		movcs	r6, r2
 290              	.LVL14:
 263:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 291              		.loc 1 263 0
 292 0028 04EB020A 		add	r10, r4, r2
 293              	.LVL15:
 268:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 294              		.loc 1 268 0
 295 002c 0F95     		str	r5, [sp, #60]
 271:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 296              		.loc 1 271 0
 297 002e 4FF04072 		mov	r2, #50331648
ARM GAS  /tmp/ccVjWqsE.s 			page 23


 298              	.LVL16:
 299              	.LBB8:
 300              	.LBB9:
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 301              		.loc 1 836 0
 302 0032 474D     		ldr	r5, .L31
 303              	.LBE9:
 304              	.LBE8:
 266:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = QUAD_PAGE_PROG_CMD;
 305              		.loc 1 266 0
 306 0034 0E91     		str	r1, [sp, #56]
 307              	.LBB15:
 308              	.LBB10:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 309              		.loc 1 826 0
 310 0036 8946     		mov	r9, r1
 311              	.LBE10:
 312              	.LBE15:
 267:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_4_LINES;
 313              		.loc 1 267 0
 314 0038 CDF820C0 		str	ip, [sp, #32]
 269:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 315              		.loc 1 269 0
 316 003c CDF82CE0 		str	lr, [sp, #44]
 270:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_4_LINES;
 317              		.loc 1 270 0
 318 0040 1093     		str	r3, [sp, #64]
 272:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 319              		.loc 1 272 0
 320 0042 0D93     		str	r3, [sp, #52]
 273:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 321              		.loc 1 273 0
 322 0044 1393     		str	r3, [sp, #76]
 274:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 323              		.loc 1 274 0
 324 0046 1493     		str	r3, [sp, #80]
 275:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 325              		.loc 1 275 0
 326 0048 1593     		str	r3, [sp, #84]
 271:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 327              		.loc 1 271 0
 328 004a 1192     		str	r2, [sp, #68]
 329              	.LBB16:
 330              	.LBB11:
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 331              		.loc 1 827 0
 332 004c 0190     		str	r0, [sp, #4]
 333              	.LVL17:
 334              	.L21:
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 335              		.loc 1 828 0
 336 004e 0023     		movs	r3, #0
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 337              		.loc 1 827 0
 338 0050 0627     		movs	r7, #6
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 339              		.loc 1 836 0
ARM GAS  /tmp/ccVjWqsE.s 			page 24


 340 0052 41F28832 		movw	r2, #5000
 341 0056 16A9     		add	r1, sp, #88
 342 0058 2846     		mov	r0, r5
 343              	.LBE11:
 344              	.LBE16:
 280:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.NbData  = current_size;
 345              		.loc 1 280 0
 346 005a 0994     		str	r4, [sp, #36]
 281:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 347              		.loc 1 281 0
 348 005c 1296     		str	r6, [sp, #72]
 349              	.LVL18:
 350              	.LBB17:
 351              	.LBB12:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 352              		.loc 1 826 0
 353 005e CDF87090 		str	r9, [sp, #112]
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 354              		.loc 1 827 0
 355 0062 1697     		str	r7, [sp, #88]
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 356              		.loc 1 828 0
 357 0064 1D93     		str	r3, [sp, #116]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 358              		.loc 1 829 0
 359 0066 1E93     		str	r3, [sp, #120]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 360              		.loc 1 830 0
 361 0068 1F93     		str	r3, [sp, #124]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 362              		.loc 1 831 0
 363 006a 1B93     		str	r3, [sp, #108]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 364              		.loc 1 832 0
 365 006c 2193     		str	r3, [sp, #132]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 366              		.loc 1 833 0
 367 006e 2293     		str	r3, [sp, #136]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 368              		.loc 1 834 0
 369 0070 2393     		str	r3, [sp, #140]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 370              		.loc 1 836 0
 371 0072 FFF7FEFF 		bl	HAL_QSPI_Command
 372              	.LVL19:
 373 0076 18B1     		cbz	r0, .L29
 374              	.LVL20:
 375              	.L18:
 376              	.LBE12:
 377              	.LBE17:
 292:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 378              		.loc 1 292 0
 379 0078 0120     		movs	r0, #1
 314:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 380              		.loc 1 314 0
 381 007a 25B0     		add	sp, sp, #148
 382              	.LCFI10:
ARM GAS  /tmp/ccVjWqsE.s 			page 25


 383              		.cfi_remember_state
 384              		.cfi_def_cfa_offset 36
 385              		@ sp needed
 386 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 387              	.LVL21:
 388              	.L29:
 389              	.LCFI11:
 390              		.cfi_restore_state
 391              	.LBB18:
 392              	.LBB13:
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 393              		.loc 1 846 0
 394 0080 1027     		movs	r7, #16
 395 0082 0497     		str	r7, [sp, #16]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 396              		.loc 1 847 0
 397 0084 4FF48007 		mov	r7, #4194304
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 398              		.loc 1 842 0
 399 0088 4FF0020E 		mov	lr, #2
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 400              		.loc 1 852 0
 401 008c 02AA     		add	r2, sp, #8
 402 008e 16A9     		add	r1, sp, #88
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 403              		.loc 1 844 0
 404 0090 0690     		str	r0, [sp, #24]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 405              		.loc 1 847 0
 406 0092 0797     		str	r7, [sp, #28]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 407              		.loc 1 845 0
 408 0094 4FF00108 		mov	r8, #1
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 409              		.loc 1 849 0
 410 0098 4FF0050B 		mov	fp, #5
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 411              		.loc 1 852 0
 412 009c 41F28833 		movw	r3, #5000
 413 00a0 2846     		mov	r0, r5
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 414              		.loc 1 850 0
 415 00a2 4FF08077 		mov	r7, #16777216
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 416              		.loc 1 842 0
 417 00a6 CDF808E0 		str	lr, [sp, #8]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 418              		.loc 1 843 0
 419 00aa CDF80CE0 		str	lr, [sp, #12]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 420              		.loc 1 845 0
 421 00ae CDF81480 		str	r8, [sp, #20]
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 422              		.loc 1 849 0
 423 00b2 CDF858B0 		str	fp, [sp, #88]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 424              		.loc 1 850 0
ARM GAS  /tmp/ccVjWqsE.s 			page 26


 425 00b6 1F97     		str	r7, [sp, #124]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 426              		.loc 1 852 0
 427 00b8 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 428              	.LVL22:
 429              	.LBE13:
 430              	.LBE18:
 290:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 431              		.loc 1 290 0
 432 00bc 08A9     		add	r1, sp, #32
 433 00be 41F28832 		movw	r2, #5000
 434              	.LBB19:
 435              	.LBB14:
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 436              		.loc 1 852 0
 437 00c2 0028     		cmp	r0, #0
 438 00c4 D8D1     		bne	.L18
 439              	.LBE14:
 440              	.LBE19:
 290:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 441              		.loc 1 290 0
 442 00c6 2846     		mov	r0, r5
 443 00c8 FFF7FEFF 		bl	HAL_QSPI_Command
 444              	.LVL23:
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 445              		.loc 1 296 0
 446 00cc 019B     		ldr	r3, [sp, #4]
 447 00ce 1946     		mov	r1, r3
 309:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     current_size = ((current_addr + MX25R6435F_PAGE_SIZE) > end_addr) ? (end_addr - current_addr) :
 448              		.loc 1 309 0
 449 00d0 3344     		add	r3, r3, r6
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 450              		.loc 1 296 0
 451 00d2 41F28832 		movw	r2, #5000
 308:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     pData += current_size;
 452              		.loc 1 308 0
 453 00d6 3444     		add	r4, r4, r6
 454              	.LVL24:
 309:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     current_size = ((current_addr + MX25R6435F_PAGE_SIZE) > end_addr) ? (end_addr - current_addr) :
 455              		.loc 1 309 0
 456 00d8 0193     		str	r3, [sp, #4]
 457              	.LVL25:
 290:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 458              		.loc 1 290 0
 459 00da 0028     		cmp	r0, #0
 460 00dc CCD1     		bne	.L18
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 461              		.loc 1 296 0
 462 00de 2846     		mov	r0, r5
 463 00e0 FFF7FEFF 		bl	HAL_QSPI_Transmit
 464              	.LVL26:
 465              	.LBB20:
 466              	.LBB21:
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 467              		.loc 1 889 0
 468 00e4 41F28833 		movw	r3, #5000
 469              	.LBE21:
ARM GAS  /tmp/ccVjWqsE.s 			page 27


 470              	.LBE20:
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 471              		.loc 1 296 0
 472 00e8 0646     		mov	r6, r0
 473              	.LVL27:
 474              	.LBB25:
 475              	.LBB22:
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 476              		.loc 1 889 0
 477 00ea 02AA     		add	r2, sp, #8
 478 00ec 16A9     		add	r1, sp, #88
 479              	.LBE22:
 480              	.LBE25:
 296:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 481              		.loc 1 296 0
 482 00ee 0028     		cmp	r0, #0
 483 00f0 C2D1     		bne	.L18
 484              	.LBB26:
 485              	.LBB23:
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 486              		.loc 1 874 0
 487 00f2 1D96     		str	r6, [sp, #116]
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 488              		.loc 1 875 0
 489 00f4 1E96     		str	r6, [sp, #120]
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 490              		.loc 1 877 0
 491 00f6 1B96     		str	r6, [sp, #108]
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 492              		.loc 1 878 0
 493 00f8 2196     		str	r6, [sp, #132]
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 494              		.loc 1 879 0
 495 00fa 2296     		str	r6, [sp, #136]
 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 496              		.loc 1 880 0
 497 00fc 2396     		str	r6, [sp, #140]
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
 498              		.loc 1 882 0
 499 00fe 0296     		str	r6, [sp, #8]
 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 500              		.loc 1 884 0
 501 0100 0696     		str	r6, [sp, #24]
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 502              		.loc 1 886 0
 503 0102 1026     		movs	r6, #16
 504 0104 0496     		str	r6, [sp, #16]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 505              		.loc 1 889 0
 506 0106 2846     		mov	r0, r5
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 507              		.loc 1 876 0
 508 0108 4FF08077 		mov	r7, #16777216
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 509              		.loc 1 887 0
 510 010c 4FF48006 		mov	r6, #4194304
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
ARM GAS  /tmp/ccVjWqsE.s 			page 28


 511              		.loc 1 872 0
 512 0110 CDF87090 		str	r9, [sp, #112]
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 513              		.loc 1 873 0
 514 0114 CDF858B0 		str	fp, [sp, #88]
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 515              		.loc 1 876 0
 516 0118 1F97     		str	r7, [sp, #124]
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 517              		.loc 1 883 0
 518 011a CDF80C80 		str	r8, [sp, #12]
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 519              		.loc 1 885 0
 520 011e CDF81480 		str	r8, [sp, #20]
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 521              		.loc 1 887 0
 522 0122 0796     		str	r6, [sp, #28]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 523              		.loc 1 889 0
 524 0124 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 525              	.LVL28:
 526              	.LBE23:
 527              	.LBE26:
 310:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   } while (current_addr < end_addr);
 528              		.loc 1 310 0
 529 0128 04F58073 		add	r3, r4, #256
 530              	.LBB27:
 531              	.LBB24:
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 532              		.loc 1 889 0
 533 012c 60B9     		cbnz	r0, .L30
 534              	.LBE24:
 535              	.LBE27:
 310:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   } while (current_addr < end_addr);
 536              		.loc 1 310 0
 537 012e 9A45     		cmp	r10, r3
 538 0130 07D3     		bcc	.L22
 539 0132 4FF48076 		mov	r6, #256
 540              	.L23:
 541              	.LVL29:
 311:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 542              		.loc 1 311 0 discriminator 4
 543 0136 A245     		cmp	r10, r4
 544 0138 89D8     		bhi	.L21
 313:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 545              		.loc 1 313 0
 546 013a 0020     		movs	r0, #0
 314:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 547              		.loc 1 314 0
 548 013c 25B0     		add	sp, sp, #148
 549              	.LCFI12:
 550              		.cfi_remember_state
 551              		.cfi_def_cfa_offset 36
 552              		@ sp needed
 553 013e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 554              	.LVL30:
 555              	.L22:
ARM GAS  /tmp/ccVjWqsE.s 			page 29


 556              	.LCFI13:
 557              		.cfi_restore_state
 310:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   } while (current_addr < end_addr);
 558              		.loc 1 310 0 discriminator 1
 559 0142 AAEB0406 		sub	r6, r10, r4
 560 0146 F6E7     		b	.L23
 561              	.L30:
 304:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 562              		.loc 1 304 0
 563 0148 4046     		mov	r0, r8
 314:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 564              		.loc 1 314 0
 565 014a 25B0     		add	sp, sp, #148
 566              	.LCFI14:
 567              		.cfi_def_cfa_offset 36
 568              		@ sp needed
 569 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 570              	.LVL31:
 571              	.L32:
 572              		.align	2
 573              	.L31:
 574 0150 00000000 		.word	QSPIHandle
 575              		.cfi_endproc
 576              	.LFE133:
 578              		.section	.text.BSP_QSPI_Erase_Block,"ax",%progbits
 579              		.align	1
 580              		.p2align 2,,3
 581              		.global	BSP_QSPI_Erase_Block
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	BSP_QSPI_Erase_Block:
 588              	.LFB134:
 322:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 589              		.loc 1 322 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 136
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LVL32:
 594 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 595              	.LCFI15:
 596              		.cfi_def_cfa_offset 32
 597              		.cfi_offset 4, -32
 598              		.cfi_offset 5, -28
 599              		.cfi_offset 6, -24
 600              		.cfi_offset 7, -20
 601              		.cfi_offset 8, -16
 602              		.cfi_offset 9, -12
 603              		.cfi_offset 10, -8
 604              		.cfi_offset 14, -4
 605 0004 A2B0     		sub	sp, sp, #136
 606              	.LCFI16:
 607              		.cfi_def_cfa_offset 168
 327:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 608              		.loc 1 327 0
 609 0006 D822     		movs	r2, #216
ARM GAS  /tmp/ccVjWqsE.s 			page 30


 330:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 610              		.loc 1 330 0
 611 0008 0790     		str	r0, [sp, #28]
 328:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 612              		.loc 1 328 0
 613 000a 4FF48060 		mov	r0, #1024
 614              	.LVL33:
 331:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 615              		.loc 1 331 0
 616 000e 0023     		movs	r3, #0
 326:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = BLOCK_ERASE_CMD;
 617              		.loc 1 326 0
 618 0010 4FF48075 		mov	r5, #256
 329:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = BlockAddress;
 619              		.loc 1 329 0
 620 0014 4FF40056 		mov	r6, #8192
 621              	.LBB32:
 622              	.LBB33:
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 623              		.loc 1 827 0
 624 0018 0624     		movs	r4, #6
 625              	.LBE33:
 626              	.LBE32:
 327:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 627              		.loc 1 327 0
 628 001a 0692     		str	r2, [sp, #24]
 328:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 629              		.loc 1 328 0
 630 001c 0D90     		str	r0, [sp, #52]
 631              	.LBB38:
 632              	.LBB34:
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 633              		.loc 1 836 0
 634 001e 14A9     		add	r1, sp, #80
 635 0020 41F28832 		movw	r2, #5000
 636 0024 2E48     		ldr	r0, .L47
 637              	.LBE34:
 638              	.LBE38:
 326:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = BLOCK_ERASE_CMD;
 639              		.loc 1 326 0
 640 0026 0C95     		str	r5, [sp, #48]
 641              	.LBB39:
 642              	.LBB35:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 643              		.loc 1 826 0
 644 0028 1A95     		str	r5, [sp, #104]
 645              	.LBE35:
 646              	.LBE39:
 329:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = BlockAddress;
 647              		.loc 1 329 0
 648 002a 0996     		str	r6, [sp, #36]
 331:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 649              		.loc 1 331 0
 650 002c 0E93     		str	r3, [sp, #56]
 332:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 651              		.loc 1 332 0
 652 002e 0F93     		str	r3, [sp, #60]
ARM GAS  /tmp/ccVjWqsE.s 			page 31


 333:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 653              		.loc 1 333 0
 654 0030 0B93     		str	r3, [sp, #44]
 334:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 655              		.loc 1 334 0
 656 0032 1193     		str	r3, [sp, #68]
 335:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 657              		.loc 1 335 0
 658 0034 1293     		str	r3, [sp, #72]
 336:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 659              		.loc 1 336 0
 660 0036 1393     		str	r3, [sp, #76]
 661              	.LVL34:
 662              	.LBB40:
 663              	.LBB36:
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 664              		.loc 1 828 0
 665 0038 1B93     		str	r3, [sp, #108]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 666              		.loc 1 829 0
 667 003a 1C93     		str	r3, [sp, #112]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 668              		.loc 1 830 0
 669 003c 1D93     		str	r3, [sp, #116]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 670              		.loc 1 831 0
 671 003e 1993     		str	r3, [sp, #100]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 672              		.loc 1 832 0
 673 0040 1F93     		str	r3, [sp, #124]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 674              		.loc 1 833 0
 675 0042 2093     		str	r3, [sp, #128]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 676              		.loc 1 834 0
 677 0044 2193     		str	r3, [sp, #132]
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 678              		.loc 1 827 0
 679 0046 1494     		str	r4, [sp, #80]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 680              		.loc 1 836 0
 681 0048 FFF7FEFF 		bl	HAL_QSPI_Command
 682              	.LVL35:
 683 004c 18B1     		cbz	r0, .L46
 684              	.L34:
 685              	.LBE36:
 686              	.LBE40:
 341:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 687              		.loc 1 341 0
 688 004e 0120     		movs	r0, #1
 357:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 689              		.loc 1 357 0
 690 0050 22B0     		add	sp, sp, #136
 691              	.LCFI17:
 692              		.cfi_remember_state
 693              		.cfi_def_cfa_offset 32
 694              		@ sp needed
ARM GAS  /tmp/ccVjWqsE.s 			page 32


 695 0052 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 696              	.L46:
 697              	.LCFI18:
 698              		.cfi_restore_state
 699              	.LBB41:
 700              	.LBB37:
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 701              		.loc 1 842 0
 702 0056 0226     		movs	r6, #2
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 703              		.loc 1 845 0
 704 0058 0124     		movs	r4, #1
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 705              		.loc 1 846 0
 706 005a 1027     		movs	r7, #16
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 707              		.loc 1 847 0
 708 005c 4FF48008 		mov	r8, #4194304
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 709              		.loc 1 849 0
 710 0060 4FF00509 		mov	r9, #5
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 711              		.loc 1 850 0
 712 0064 4FF0807A 		mov	r10, #16777216
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 713              		.loc 1 844 0
 714 0068 0490     		str	r0, [sp, #16]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 715              		.loc 1 852 0
 716 006a 6A46     		mov	r2, sp
 717 006c 41F28833 		movw	r3, #5000
 718 0070 14A9     		add	r1, sp, #80
 719 0072 1B48     		ldr	r0, .L47
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 720              		.loc 1 842 0
 721 0074 0096     		str	r6, [sp]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 722              		.loc 1 843 0
 723 0076 0196     		str	r6, [sp, #4]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 724              		.loc 1 845 0
 725 0078 0394     		str	r4, [sp, #12]
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 726              		.loc 1 846 0
 727 007a 0297     		str	r7, [sp, #8]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 728              		.loc 1 847 0
 729 007c CDF81480 		str	r8, [sp, #20]
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 730              		.loc 1 849 0
 731 0080 CDF85090 		str	r9, [sp, #80]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 732              		.loc 1 850 0
 733 0084 CDF874A0 		str	r10, [sp, #116]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 734              		.loc 1 852 0
 735 0088 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
ARM GAS  /tmp/ccVjWqsE.s 			page 33


 736              	.LVL36:
 737 008c 0028     		cmp	r0, #0
 738 008e DED1     		bne	.L34
 739              	.LBE37:
 740              	.LBE41:
 345:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 741              		.loc 1 345 0
 742 0090 41F28832 		movw	r2, #5000
 743 0094 06A9     		add	r1, sp, #24
 744 0096 1248     		ldr	r0, .L47
 745 0098 FFF7FEFF 		bl	HAL_QSPI_Command
 746              	.LVL37:
 747 009c 0646     		mov	r6, r0
 748 009e 0028     		cmp	r0, #0
 749 00a0 D5D1     		bne	.L34
 750              	.LVL38:
 751              	.LBB42:
 752              	.LBB43:
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 753              		.loc 1 889 0
 754 00a2 6A46     		mov	r2, sp
 755 00a4 14A9     		add	r1, sp, #80
 756 00a6 40F6AC53 		movw	r3, #3500
 757 00aa 0D48     		ldr	r0, .L47
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 758              		.loc 1 872 0
 759 00ac 1A95     		str	r5, [sp, #104]
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 760              		.loc 1 873 0
 761 00ae CDF85090 		str	r9, [sp, #80]
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 762              		.loc 1 874 0
 763 00b2 1B96     		str	r6, [sp, #108]
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 764              		.loc 1 875 0
 765 00b4 1C96     		str	r6, [sp, #112]
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 766              		.loc 1 876 0
 767 00b6 CDF874A0 		str	r10, [sp, #116]
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 768              		.loc 1 877 0
 769 00ba 1996     		str	r6, [sp, #100]
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 770              		.loc 1 878 0
 771 00bc 1F96     		str	r6, [sp, #124]
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 772              		.loc 1 879 0
 773 00be 2096     		str	r6, [sp, #128]
 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 774              		.loc 1 880 0
 775 00c0 2196     		str	r6, [sp, #132]
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
 776              		.loc 1 882 0
 777 00c2 0096     		str	r6, [sp]
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 778              		.loc 1 883 0
 779 00c4 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccVjWqsE.s 			page 34


 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 780              		.loc 1 884 0
 781 00c6 0496     		str	r6, [sp, #16]
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 782              		.loc 1 885 0
 783 00c8 0394     		str	r4, [sp, #12]
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 784              		.loc 1 886 0
 785 00ca 0297     		str	r7, [sp, #8]
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 786              		.loc 1 887 0
 787 00cc CDF81480 		str	r8, [sp, #20]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 788              		.loc 1 889 0
 789 00d0 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 790              	.LVL39:
 791              	.LBE43:
 792              	.LBE42:
 356:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 793              		.loc 1 356 0
 794 00d4 0030     		adds	r0, r0, #0
 795 00d6 18BF     		it	ne
 796 00d8 0120     		movne	r0, #1
 357:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 797              		.loc 1 357 0
 798 00da 22B0     		add	sp, sp, #136
 799              	.LCFI19:
 800              		.cfi_def_cfa_offset 32
 801              		@ sp needed
 802 00dc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 803              	.L48:
 804              		.align	2
 805              	.L47:
 806 00e0 00000000 		.word	QSPIHandle
 807              		.cfi_endproc
 808              	.LFE134:
 810              		.section	.text.BSP_QSPI_Erase_Sector,"ax",%progbits
 811              		.align	1
 812              		.p2align 2,,3
 813              		.global	BSP_QSPI_Erase_Sector
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	BSP_QSPI_Erase_Sector:
 820              	.LFB135:
 370:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 821              		.loc 1 370 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 136
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              	.LVL40:
 373:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 826              		.loc 1 373 0
 827 0000 B0F5006F 		cmp	r0, #2048
 828 0004 01D3     		bcc	.L60
 375:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
ARM GAS  /tmp/ccVjWqsE.s 			page 35


 829              		.loc 1 375 0
 830 0006 0120     		movs	r0, #1
 831              	.LVL41:
 832 0008 7047     		bx	lr
 833              	.LVL42:
 834              	.L60:
 370:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 835              		.loc 1 370 0
 836 000a F0B5     		push	{r4, r5, r6, r7, lr}
 837              	.LCFI20:
 838              		.cfi_def_cfa_offset 20
 839              		.cfi_offset 4, -20
 840              		.cfi_offset 5, -16
 841              		.cfi_offset 6, -12
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 000c A3B0     		sub	sp, sp, #140
 845              	.LCFI21:
 846              		.cfi_def_cfa_offset 160
 379:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = SECTOR_ERASE_CMD;
 847              		.loc 1 379 0
 848 000e 4FF48072 		mov	r2, #256
 383:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 849              		.loc 1 383 0
 850 0012 0003     		lsls	r0, r0, #12
 851              	.LVL43:
 384:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 852              		.loc 1 384 0
 853 0014 0023     		movs	r3, #0
 380:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 854              		.loc 1 380 0
 855 0016 2027     		movs	r7, #32
 381:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 856              		.loc 1 381 0
 857 0018 4FF48066 		mov	r6, #1024
 382:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = (Sector * MX25R6435F_SECTOR_SIZE);
 858              		.loc 1 382 0
 859 001c 4FF40055 		mov	r5, #8192
 383:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 860              		.loc 1 383 0
 861 0020 0790     		str	r0, [sp, #28]
 862              	.LBB46:
 863              	.LBB47:
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 864              		.loc 1 827 0
 865 0022 0624     		movs	r4, #6
 866              	.LBE47:
 867              	.LBE46:
 379:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = SECTOR_ERASE_CMD;
 868              		.loc 1 379 0
 869 0024 0C92     		str	r2, [sp, #48]
 870              	.LBB51:
 871              	.LBB48:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 872              		.loc 1 826 0
 873 0026 1A92     		str	r2, [sp, #104]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 36


 874              		.loc 1 836 0
 875 0028 14A9     		add	r1, sp, #80
 876 002a 41F28832 		movw	r2, #5000
 877 002e 1F48     		ldr	r0, .L62
 878              	.LBE48:
 879              	.LBE51:
 380:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_1_LINE;
 880              		.loc 1 380 0
 881 0030 0697     		str	r7, [sp, #24]
 381:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize       = QSPI_ADDRESS_24_BITS;
 882              		.loc 1 381 0
 883 0032 0D96     		str	r6, [sp, #52]
 382:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Address           = (Sector * MX25R6435F_SECTOR_SIZE);
 884              		.loc 1 382 0
 885 0034 0995     		str	r5, [sp, #36]
 384:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 886              		.loc 1 384 0
 887 0036 0E93     		str	r3, [sp, #56]
 385:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 888              		.loc 1 385 0
 889 0038 0F93     		str	r3, [sp, #60]
 386:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 890              		.loc 1 386 0
 891 003a 0B93     		str	r3, [sp, #44]
 387:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 892              		.loc 1 387 0
 893 003c 1193     		str	r3, [sp, #68]
 388:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 894              		.loc 1 388 0
 895 003e 1293     		str	r3, [sp, #72]
 389:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 896              		.loc 1 389 0
 897 0040 1393     		str	r3, [sp, #76]
 898              	.LVL44:
 899              	.LBB52:
 900              	.LBB49:
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 901              		.loc 1 828 0
 902 0042 1B93     		str	r3, [sp, #108]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 903              		.loc 1 829 0
 904 0044 1C93     		str	r3, [sp, #112]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 905              		.loc 1 830 0
 906 0046 1D93     		str	r3, [sp, #116]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 907              		.loc 1 831 0
 908 0048 1993     		str	r3, [sp, #100]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 909              		.loc 1 832 0
 910 004a 1F93     		str	r3, [sp, #124]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 911              		.loc 1 833 0
 912 004c 2093     		str	r3, [sp, #128]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 913              		.loc 1 834 0
 914 004e 2193     		str	r3, [sp, #132]
ARM GAS  /tmp/ccVjWqsE.s 			page 37


 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 915              		.loc 1 827 0
 916 0050 1494     		str	r4, [sp, #80]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 917              		.loc 1 836 0
 918 0052 FFF7FEFF 		bl	HAL_QSPI_Command
 919              	.LVL45:
 920 0056 10B1     		cbz	r0, .L61
 921              	.L51:
 922              	.LBE49:
 923              	.LBE52:
 394:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 924              		.loc 1 394 0
 925 0058 0120     		movs	r0, #1
 404:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 926              		.loc 1 404 0
 927 005a 23B0     		add	sp, sp, #140
 928              	.LCFI22:
 929              		.cfi_remember_state
 930              		.cfi_def_cfa_offset 20
 931              		@ sp needed
 932 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 933              	.L61:
 934              	.LCFI23:
 935              		.cfi_restore_state
 936              	.LBB53:
 937              	.LBB50:
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 938              		.loc 1 842 0
 939 005e 0222     		movs	r2, #2
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 940              		.loc 1 845 0
 941 0060 4FF0010E 		mov	lr, #1
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 942              		.loc 1 846 0
 943 0064 1027     		movs	r7, #16
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 944              		.loc 1 847 0
 945 0066 4FF48006 		mov	r6, #4194304
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 946              		.loc 1 849 0
 947 006a 0525     		movs	r5, #5
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 948              		.loc 1 850 0
 949 006c 4FF08074 		mov	r4, #16777216
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 950              		.loc 1 844 0
 951 0070 0490     		str	r0, [sp, #16]
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 952              		.loc 1 842 0
 953 0072 0092     		str	r2, [sp]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 954              		.loc 1 843 0
 955 0074 0192     		str	r2, [sp, #4]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 956              		.loc 1 852 0
 957 0076 14A9     		add	r1, sp, #80
ARM GAS  /tmp/ccVjWqsE.s 			page 38


 958 0078 41F28833 		movw	r3, #5000
 959 007c 6A46     		mov	r2, sp
 960 007e 0B48     		ldr	r0, .L62
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 961              		.loc 1 845 0
 962 0080 CDF80CE0 		str	lr, [sp, #12]
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 963              		.loc 1 846 0
 964 0084 0297     		str	r7, [sp, #8]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 965              		.loc 1 847 0
 966 0086 0596     		str	r6, [sp, #20]
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 967              		.loc 1 849 0
 968 0088 1495     		str	r5, [sp, #80]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 969              		.loc 1 850 0
 970 008a 1D94     		str	r4, [sp, #116]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 971              		.loc 1 852 0
 972 008c FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 973              	.LVL46:
 974 0090 0028     		cmp	r0, #0
 975 0092 E1D1     		bne	.L51
 976              	.LBE50:
 977              	.LBE53:
 398:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 978              		.loc 1 398 0
 979 0094 41F28832 		movw	r2, #5000
 980 0098 06A9     		add	r1, sp, #24
 981 009a 0448     		ldr	r0, .L62
 982 009c FFF7FEFF 		bl	HAL_QSPI_Command
 983              	.LVL47:
 375:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 984              		.loc 1 375 0
 985 00a0 0030     		adds	r0, r0, #0
 986 00a2 18BF     		it	ne
 987 00a4 0120     		movne	r0, #1
 404:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 988              		.loc 1 404 0
 989 00a6 23B0     		add	sp, sp, #140
 990              	.LCFI24:
 991              		.cfi_def_cfa_offset 20
 992              		@ sp needed
 993 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 994              	.L63:
 995 00aa 00BF     		.align	2
 996              	.L62:
 997 00ac 00000000 		.word	QSPIHandle
 998              		.cfi_endproc
 999              	.LFE135:
 1001              		.section	.text.BSP_QSPI_Erase_Chip,"ax",%progbits
 1002              		.align	1
 1003              		.p2align 2,,3
 1004              		.global	BSP_QSPI_Erase_Chip
 1005              		.syntax unified
 1006              		.thumb
ARM GAS  /tmp/ccVjWqsE.s 			page 39


 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	BSP_QSPI_Erase_Chip:
 1011              	.LFB136:
 411:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 1012              		.loc 1 411 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 136
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1017              	.LCFI25:
 1018              		.cfi_def_cfa_offset 32
 1019              		.cfi_offset 4, -32
 1020              		.cfi_offset 5, -28
 1021              		.cfi_offset 6, -24
 1022              		.cfi_offset 7, -20
 1023              		.cfi_offset 8, -16
 1024              		.cfi_offset 9, -12
 1025              		.cfi_offset 10, -8
 1026              		.cfi_offset 14, -4
 1027 0004 A2B0     		sub	sp, sp, #136
 1028              	.LCFI26:
 1029              		.cfi_def_cfa_offset 168
 417:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1030              		.loc 1 417 0
 1031 0006 0023     		movs	r3, #0
 415:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = CHIP_ERASE_CMD;
 1032              		.loc 1 415 0
 1033 0008 4FF48075 		mov	r5, #256
 416:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1034              		.loc 1 416 0
 1035 000c 6026     		movs	r6, #96
 1036              	.LBB58:
 1037              	.LBB59:
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1038              		.loc 1 827 0
 1039 000e 0624     		movs	r4, #6
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1040              		.loc 1 836 0
 1041 0010 14A9     		add	r1, sp, #80
 1042 0012 41F28832 		movw	r2, #5000
 1043 0016 2F48     		ldr	r0, .L78
 1044              	.LBE59:
 1045              	.LBE58:
 415:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = CHIP_ERASE_CMD;
 1046              		.loc 1 415 0
 1047 0018 0C95     		str	r5, [sp, #48]
 1048              	.LBB63:
 1049              	.LBB60:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 1050              		.loc 1 826 0
 1051 001a 1A95     		str	r5, [sp, #104]
 1052              	.LBE60:
 1053              	.LBE63:
 416:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1054              		.loc 1 416 0
 1055 001c 0696     		str	r6, [sp, #24]
ARM GAS  /tmp/ccVjWqsE.s 			page 40


 417:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1056              		.loc 1 417 0
 1057 001e 0D93     		str	r3, [sp, #52]
 418:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 1058              		.loc 1 418 0
 1059 0020 0E93     		str	r3, [sp, #56]
 419:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1060              		.loc 1 419 0
 1061 0022 0F93     		str	r3, [sp, #60]
 420:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1062              		.loc 1 420 0
 1063 0024 0B93     		str	r3, [sp, #44]
 421:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1064              		.loc 1 421 0
 1065 0026 1193     		str	r3, [sp, #68]
 422:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1066              		.loc 1 422 0
 1067 0028 1293     		str	r3, [sp, #72]
 423:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1068              		.loc 1 423 0
 1069 002a 1393     		str	r3, [sp, #76]
 1070              	.LVL48:
 1071              	.LBB64:
 1072              	.LBB61:
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1073              		.loc 1 828 0
 1074 002c 1B93     		str	r3, [sp, #108]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 1075              		.loc 1 829 0
 1076 002e 1C93     		str	r3, [sp, #112]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1077              		.loc 1 830 0
 1078 0030 1D93     		str	r3, [sp, #116]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1079              		.loc 1 831 0
 1080 0032 1993     		str	r3, [sp, #100]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1081              		.loc 1 832 0
 1082 0034 1F93     		str	r3, [sp, #124]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1083              		.loc 1 833 0
 1084 0036 2093     		str	r3, [sp, #128]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1085              		.loc 1 834 0
 1086 0038 2193     		str	r3, [sp, #132]
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1087              		.loc 1 827 0
 1088 003a 1494     		str	r4, [sp, #80]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1089              		.loc 1 836 0
 1090 003c FFF7FEFF 		bl	HAL_QSPI_Command
 1091              	.LVL49:
 1092 0040 18B1     		cbz	r0, .L77
 1093              	.L65:
 1094              	.LBE61:
 1095              	.LBE64:
 428:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
ARM GAS  /tmp/ccVjWqsE.s 			page 41


 1096              		.loc 1 428 0
 1097 0042 0120     		movs	r0, #1
 444:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1098              		.loc 1 444 0
 1099 0044 22B0     		add	sp, sp, #136
 1100              	.LCFI27:
 1101              		.cfi_remember_state
 1102              		.cfi_def_cfa_offset 32
 1103              		@ sp needed
 1104 0046 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1105              	.L77:
 1106              	.LCFI28:
 1107              		.cfi_restore_state
 1108              	.LBB65:
 1109              	.LBB62:
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 1110              		.loc 1 842 0
 1111 004a 0226     		movs	r6, #2
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 1112              		.loc 1 845 0
 1113 004c 0124     		movs	r4, #1
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 1114              		.loc 1 846 0
 1115 004e 1027     		movs	r7, #16
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1116              		.loc 1 847 0
 1117 0050 4FF48008 		mov	r8, #4194304
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 1118              		.loc 1 849 0
 1119 0054 4FF00509 		mov	r9, #5
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1120              		.loc 1 850 0
 1121 0058 4FF0807A 		mov	r10, #16777216
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 1122              		.loc 1 844 0
 1123 005c 0490     		str	r0, [sp, #16]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1124              		.loc 1 852 0
 1125 005e 6A46     		mov	r2, sp
 1126 0060 41F28833 		movw	r3, #5000
 1127 0064 14A9     		add	r1, sp, #80
 1128 0066 1B48     		ldr	r0, .L78
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 1129              		.loc 1 842 0
 1130 0068 0096     		str	r6, [sp]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 1131              		.loc 1 843 0
 1132 006a 0196     		str	r6, [sp, #4]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 1133              		.loc 1 845 0
 1134 006c 0394     		str	r4, [sp, #12]
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 1135              		.loc 1 846 0
 1136 006e 0297     		str	r7, [sp, #8]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1137              		.loc 1 847 0
 1138 0070 CDF81480 		str	r8, [sp, #20]
ARM GAS  /tmp/ccVjWqsE.s 			page 42


 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 1139              		.loc 1 849 0
 1140 0074 CDF85090 		str	r9, [sp, #80]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1141              		.loc 1 850 0
 1142 0078 CDF874A0 		str	r10, [sp, #116]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1143              		.loc 1 852 0
 1144 007c FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 1145              	.LVL50:
 1146 0080 0028     		cmp	r0, #0
 1147 0082 DED1     		bne	.L65
 1148              	.LBE62:
 1149              	.LBE65:
 432:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1150              		.loc 1 432 0
 1151 0084 41F28832 		movw	r2, #5000
 1152 0088 06A9     		add	r1, sp, #24
 1153 008a 1248     		ldr	r0, .L78
 1154 008c FFF7FEFF 		bl	HAL_QSPI_Command
 1155              	.LVL51:
 1156 0090 0646     		mov	r6, r0
 1157 0092 0028     		cmp	r0, #0
 1158 0094 D5D1     		bne	.L65
 1159              	.LVL52:
 1160              	.LBB66:
 1161              	.LBB67:
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1162              		.loc 1 889 0
 1163 0096 6A46     		mov	r2, sp
 1164 0098 14A9     		add	r1, sp, #80
 1165 009a 0F4B     		ldr	r3, .L78+4
 1166 009c 0D48     		ldr	r0, .L78
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 1167              		.loc 1 872 0
 1168 009e 1A95     		str	r5, [sp, #104]
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1169              		.loc 1 873 0
 1170 00a0 CDF85090 		str	r9, [sp, #80]
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1171              		.loc 1 874 0
 1172 00a4 1B96     		str	r6, [sp, #108]
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 1173              		.loc 1 875 0
 1174 00a6 1C96     		str	r6, [sp, #112]
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1175              		.loc 1 876 0
 1176 00a8 CDF874A0 		str	r10, [sp, #116]
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1177              		.loc 1 877 0
 1178 00ac 1996     		str	r6, [sp, #100]
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1179              		.loc 1 878 0
 1180 00ae 1F96     		str	r6, [sp, #124]
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1181              		.loc 1 879 0
 1182 00b0 2096     		str	r6, [sp, #128]
ARM GAS  /tmp/ccVjWqsE.s 			page 43


 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1183              		.loc 1 880 0
 1184 00b2 2196     		str	r6, [sp, #132]
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
 1185              		.loc 1 882 0
 1186 00b4 0096     		str	r6, [sp]
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 1187              		.loc 1 883 0
 1188 00b6 0194     		str	r4, [sp, #4]
 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 1189              		.loc 1 884 0
 1190 00b8 0496     		str	r6, [sp, #16]
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 1191              		.loc 1 885 0
 1192 00ba 0394     		str	r4, [sp, #12]
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 1193              		.loc 1 886 0
 1194 00bc 0297     		str	r7, [sp, #8]
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1195              		.loc 1 887 0
 1196 00be CDF81480 		str	r8, [sp, #20]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1197              		.loc 1 889 0
 1198 00c2 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 1199              	.LVL53:
 1200              	.LBE67:
 1201              	.LBE66:
 443:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 1202              		.loc 1 443 0
 1203 00c6 0030     		adds	r0, r0, #0
 1204 00c8 18BF     		it	ne
 1205 00ca 0120     		movne	r0, #1
 444:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1206              		.loc 1 444 0
 1207 00cc 22B0     		add	sp, sp, #136
 1208              	.LCFI29:
 1209              		.cfi_def_cfa_offset 32
 1210              		@ sp needed
 1211 00ce BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1212              	.L79:
 1213 00d2 00BF     		.align	2
 1214              	.L78:
 1215 00d4 00000000 		.word	QSPIHandle
 1216 00d8 80A90300 		.word	240000
 1217              		.cfi_endproc
 1218              	.LFE136:
 1220              		.section	.text.BSP_QSPI_GetStatus,"ax",%progbits
 1221              		.align	1
 1222              		.p2align 2,,3
 1223              		.global	BSP_QSPI_GetStatus
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1227              		.fpu fpv4-sp-d16
 1229              	BSP_QSPI_GetStatus:
 1230              	.LFB137:
 451:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
ARM GAS  /tmp/ccVjWqsE.s 			page 44


 1231              		.loc 1 451 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 64
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235 0000 70B5     		push	{r4, r5, r6, lr}
 1236              	.LCFI30:
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 4, -16
 1239              		.cfi_offset 5, -12
 1240              		.cfi_offset 6, -8
 1241              		.cfi_offset 14, -4
 1242 0002 90B0     		sub	sp, sp, #64
 1243              	.LCFI31:
 1244              		.cfi_def_cfa_offset 80
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1245              		.loc 1 456 0
 1246 0004 4FF48070 		mov	r0, #256
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1247              		.loc 1 458 0
 1248 0008 0023     		movs	r3, #0
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1249              		.loc 1 457 0
 1250 000a 2B26     		movs	r6, #43
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1251              		.loc 1 460 0
 1252 000c 4FF08075 		mov	r5, #16777216
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1253              		.loc 1 462 0
 1254 0010 0124     		movs	r4, #1
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1255              		.loc 1 456 0
 1256 0012 0890     		str	r0, [sp, #32]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1257              		.loc 1 468 0
 1258 0014 02A9     		add	r1, sp, #8
 1259 0016 41F28832 		movw	r2, #5000
 1260 001a 1F48     		ldr	r0, .L88
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1261              		.loc 1 457 0
 1262 001c 0296     		str	r6, [sp, #8]
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1263              		.loc 1 458 0
 1264 001e 0993     		str	r3, [sp, #36]
 459:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 1265              		.loc 1 459 0
 1266 0020 0A93     		str	r3, [sp, #40]
 461:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 1267              		.loc 1 461 0
 1268 0022 0793     		str	r3, [sp, #28]
 463:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1269              		.loc 1 463 0
 1270 0024 0D93     		str	r3, [sp, #52]
 464:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1271              		.loc 1 464 0
 1272 0026 0E93     		str	r3, [sp, #56]
 465:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1273              		.loc 1 465 0
ARM GAS  /tmp/ccVjWqsE.s 			page 45


 1274 0028 0F93     		str	r3, [sp, #60]
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1275              		.loc 1 460 0
 1276 002a 0B95     		str	r5, [sp, #44]
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1277              		.loc 1 462 0
 1278 002c 0C94     		str	r4, [sp, #48]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1279              		.loc 1 468 0
 1280 002e FFF7FEFF 		bl	HAL_QSPI_Command
 1281              	.LVL54:
 1282 0032 10B1     		cbz	r0, .L81
 1283              	.L83:
 470:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 1284              		.loc 1 470 0
 1285 0034 0120     		movs	r0, #1
 1286              	.L82:
 513:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1287              		.loc 1 513 0
 1288 0036 10B0     		add	sp, sp, #64
 1289              	.LCFI32:
 1290              		.cfi_remember_state
 1291              		.cfi_def_cfa_offset 16
 1292              		@ sp needed
 1293 0038 70BD     		pop	{r4, r5, r6, pc}
 1294              	.L81:
 1295              	.LCFI33:
 1296              		.cfi_restore_state
 474:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1297              		.loc 1 474 0
 1298 003a 0DF10701 		add	r1, sp, #7
 1299 003e 41F28832 		movw	r2, #5000
 1300 0042 1548     		ldr	r0, .L88
 1301 0044 FFF7FEFF 		bl	HAL_QSPI_Receive
 1302              	.LVL55:
 1303 0048 0028     		cmp	r0, #0
 1304 004a F3D1     		bne	.L83
 480:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1305              		.loc 1 480 0
 1306 004c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1307 0050 13F0600F 		tst	r3, #96
 1308 0054 EED1     		bne	.L83
 484:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1309              		.loc 1 484 0
 1310 0056 13F00C0F 		tst	r3, #12
 1311 005a 02D0     		beq	.L87
 486:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 1312              		.loc 1 486 0
 1313 005c 0820     		movs	r0, #8
 513:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1314              		.loc 1 513 0
 1315 005e 10B0     		add	sp, sp, #64
 1316              	.LCFI34:
 1317              		.cfi_remember_state
 1318              		.cfi_def_cfa_offset 16
 1319              		@ sp needed
 1320 0060 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccVjWqsE.s 			page 46


 1321              	.L87:
 1322              	.LCFI35:
 1323              		.cfi_restore_state
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1324              		.loc 1 490 0
 1325 0062 0523     		movs	r3, #5
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1326              		.loc 1 493 0
 1327 0064 02A9     		add	r1, sp, #8
 1328 0066 41F28832 		movw	r2, #5000
 1329 006a 0B48     		ldr	r0, .L88
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1330              		.loc 1 490 0
 1331 006c 0293     		str	r3, [sp, #8]
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1332              		.loc 1 493 0
 1333 006e FFF7FEFF 		bl	HAL_QSPI_Command
 1334              	.LVL56:
 1335 0072 0028     		cmp	r0, #0
 1336 0074 DED1     		bne	.L83
 499:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1337              		.loc 1 499 0
 1338 0076 0DF10701 		add	r1, sp, #7
 1339 007a 41F28832 		movw	r2, #5000
 1340 007e 0648     		ldr	r0, .L88
 1341 0080 FFF7FEFF 		bl	HAL_QSPI_Receive
 1342              	.LVL57:
 1343 0084 0028     		cmp	r0, #0
 1344 0086 D5D1     		bne	.L83
 505:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1345              		.loc 1 505 0
 1346 0088 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 511:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 1347              		.loc 1 511 0
 1348 008c 13F0010F 		tst	r3, #1
 1349 0090 14BF     		ite	ne
 1350 0092 0220     		movne	r0, #2
 1351 0094 0020     		moveq	r0, #0
 1352 0096 CEE7     		b	.L82
 1353              	.L89:
 1354              		.align	2
 1355              	.L88:
 1356 0098 00000000 		.word	QSPIHandle
 1357              		.cfi_endproc
 1358              	.LFE137:
 1360              		.section	.text.BSP_QSPI_GetInfo,"ax",%progbits
 1361              		.align	1
 1362              		.p2align 2,,3
 1363              		.global	BSP_QSPI_GetInfo
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv4-sp-d16
 1369              	BSP_QSPI_GetInfo:
 1370              	.LFB138:
 521:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Configure the structure with the memory configuration */
 1371              		.loc 1 521 0
ARM GAS  /tmp/ccVjWqsE.s 			page 47


 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376              	.LVL58:
 1377 0000 30B4     		push	{r4, r5}
 1378              	.LCFI36:
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 4, -8
 1381              		.cfi_offset 5, -4
 525:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPageSize       = MX25R6435F_PAGE_SIZE;
 1382              		.loc 1 525 0
 1383 0002 4FF40061 		mov	r1, #2048
 523:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorSize    = MX25R6435F_SECTOR_SIZE;
 1384              		.loc 1 523 0
 1385 0006 4FF40005 		mov	r5, #8388608
 524:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorsNumber = (MX25R6435F_FLASH_SIZE/MX25R6435F_SECTOR_SIZE);
 1386              		.loc 1 524 0
 1387 000a 4FF48054 		mov	r4, #4096
 526:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPagesNumber    = (MX25R6435F_FLASH_SIZE/MX25R6435F_PAGE_SIZE);
 1388              		.loc 1 526 0
 1389 000e 4FF48072 		mov	r2, #256
 527:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 1390              		.loc 1 527 0
 1391 0012 4FF40043 		mov	r3, #32768
 523:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorSize    = MX25R6435F_SECTOR_SIZE;
 1392              		.loc 1 523 0
 1393 0016 0560     		str	r5, [r0]
 524:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->EraseSectorsNumber = (MX25R6435F_FLASH_SIZE/MX25R6435F_SECTOR_SIZE);
 1394              		.loc 1 524 0
 1395 0018 4460     		str	r4, [r0, #4]
 525:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPageSize       = MX25R6435F_PAGE_SIZE;
 1396              		.loc 1 525 0
 1397 001a 8160     		str	r1, [r0, #8]
 526:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   pInfo->ProgPagesNumber    = (MX25R6435F_FLASH_SIZE/MX25R6435F_PAGE_SIZE);
 1398              		.loc 1 526 0
 1399 001c C260     		str	r2, [r0, #12]
 527:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 1400              		.loc 1 527 0
 1401 001e 0361     		str	r3, [r0, #16]
 530:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1402              		.loc 1 530 0
 1403 0020 30BC     		pop	{r4, r5}
 1404              	.LCFI37:
 1405              		.cfi_restore 5
 1406              		.cfi_restore 4
 1407              		.cfi_def_cfa_offset 0
 1408 0022 0020     		movs	r0, #0
 1409              	.LVL59:
 1410 0024 7047     		bx	lr
 1411              		.cfi_endproc
 1412              	.LFE138:
 1414 0026 00BF     		.section	.text.BSP_QSPI_EnableMemoryMappedMode,"ax",%progbits
 1415              		.align	1
 1416              		.p2align 2,,3
 1417              		.global	BSP_QSPI_EnableMemoryMappedMode
 1418              		.syntax unified
ARM GAS  /tmp/ccVjWqsE.s 			page 48


 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu fpv4-sp-d16
 1423              	BSP_QSPI_EnableMemoryMappedMode:
 1424              	.LFB139:
 537:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef      sCommand;
 1425              		.loc 1 537 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 64
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1430              	.LCFI38:
 1431              		.cfi_def_cfa_offset 20
 1432              		.cfi_offset 4, -20
 1433              		.cfi_offset 5, -16
 1434              		.cfi_offset 6, -12
 1435              		.cfi_offset 7, -8
 1436              		.cfi_offset 14, -4
 1437 0002 91B0     		sub	sp, sp, #68
 1438              	.LCFI39:
 1439              		.cfi_def_cfa_offset 88
 542:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 1440              		.loc 1 542 0
 1441 0004 4FF48074 		mov	r4, #256
 543:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
 1442              		.loc 1 543 0
 1443 0008 EB22     		movs	r2, #235
 544:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 1444              		.loc 1 544 0
 1445 000a 4FF44061 		mov	r1, #3072
 545:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode  = QSPI_ALTERNATE_BYTES_4_LINES;
 1446              		.loc 1 545 0
 1447 000e 4FF40050 		mov	r0, #8192
 547:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
 1448              		.loc 1 547 0
 1449 0012 0023     		movs	r3, #0
 542:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction        = QUAD_INOUT_READ_CMD;
 1450              		.loc 1 542 0
 1451 0014 0894     		str	r4, [sp, #32]
 543:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode        = QSPI_ADDRESS_4_LINES;
 1452              		.loc 1 543 0
 1453 0016 0292     		str	r2, [sp, #8]
 544:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressSize        = QSPI_ADDRESS_24_BITS;
 1454              		.loc 1 544 0
 1455 0018 0991     		str	r1, [sp, #36]
 545:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode  = QSPI_ALTERNATE_BYTES_4_LINES;
 1456              		.loc 1 545 0
 1457 001a 0590     		str	r0, [sp, #20]
 546:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 1458              		.loc 1 546 0
 1459 001c 4FF44047 		mov	r7, #49152
 548:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 1460              		.loc 1 548 0
 1461 0020 AA26     		movs	r6, #170
 549:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 1462              		.loc 1 549 0
 1463 0022 4FF04075 		mov	r5, #50331648
ARM GAS  /tmp/ccVjWqsE.s 			page 49


 550:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode            = QSPI_DDR_MODE_DISABLE;
 1464              		.loc 1 550 0
 1465 0026 0424     		movs	r4, #4
 558:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1466              		.loc 1 558 0
 1467 0028 6A46     		mov	r2, sp
 1468 002a 02A9     		add	r1, sp, #8
 1469 002c 0848     		ldr	r0, .L94
 546:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 1470              		.loc 1 546 0
 1471 002e 0A97     		str	r7, [sp, #40]
 547:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateBytes     = MX25R6435F_ALT_BYTES_NO_PE_MODE;
 1472              		.loc 1 547 0
 1473 0030 0693     		str	r3, [sp, #24]
 551:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle   = QSPI_DDR_HHC_ANALOG_DELAY;
 1474              		.loc 1 551 0
 1475 0032 0D93     		str	r3, [sp, #52]
 552:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode           = QSPI_SIOO_INST_EVERY_CMD;
 1476              		.loc 1 552 0
 1477 0034 0E93     		str	r3, [sp, #56]
 553:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 1478              		.loc 1 553 0
 1479 0036 0F93     		str	r3, [sp, #60]
 556:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 1480              		.loc 1 556 0
 1481 0038 0193     		str	r3, [sp, #4]
 548:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode           = QSPI_DATA_4_LINES;
 1482              		.loc 1 548 0
 1483 003a 0496     		str	r6, [sp, #16]
 549:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles        = MX25R6435F_DUMMY_CYCLES_READ_QUAD;
 1484              		.loc 1 549 0
 1485 003c 0B95     		str	r5, [sp, #44]
 550:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode            = QSPI_DDR_MODE_DISABLE;
 1486              		.loc 1 550 0
 1487 003e 0794     		str	r4, [sp, #28]
 558:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1488              		.loc 1 558 0
 1489 0040 FFF7FEFF 		bl	HAL_QSPI_MemoryMapped
 1490              	.LVL60:
 564:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1491              		.loc 1 564 0
 1492 0044 0030     		adds	r0, r0, #0
 1493 0046 18BF     		it	ne
 1494 0048 0120     		movne	r0, #1
 1495 004a 11B0     		add	sp, sp, #68
 1496              	.LCFI40:
 1497              		.cfi_def_cfa_offset 20
 1498              		@ sp needed
 1499 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1500              	.L95:
 1501 004e 00BF     		.align	2
 1502              	.L94:
 1503 0050 00000000 		.word	QSPIHandle
 1504              		.cfi_endproc
 1505              	.LFE139:
 1507              		.section	.text.BSP_QSPI_SuspendErase,"ax",%progbits
 1508              		.align	1
ARM GAS  /tmp/ccVjWqsE.s 			page 50


 1509              		.p2align 2,,3
 1510              		.global	BSP_QSPI_SuspendErase
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	BSP_QSPI_SuspendErase:
 1517              	.LFB140:
 571:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 1518              		.loc 1 571 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 64
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522 0000 70B5     		push	{r4, r5, r6, lr}
 1523              	.LCFI41:
 1524              		.cfi_def_cfa_offset 16
 1525              		.cfi_offset 4, -16
 1526              		.cfi_offset 5, -12
 1527              		.cfi_offset 6, -8
 1528              		.cfi_offset 14, -4
 1529 0002 90B0     		sub	sp, sp, #64
 1530              	.LCFI42:
 1531              		.cfi_def_cfa_offset 80
 1532              	.LBB70:
 1533              	.LBB71:
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1534              		.loc 1 457 0
 1535 0004 2B20     		movs	r0, #43
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1536              		.loc 1 458 0
 1537 0006 0023     		movs	r3, #0
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1538              		.loc 1 456 0
 1539 0008 4FF48075 		mov	r5, #256
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1540              		.loc 1 460 0
 1541 000c 4FF08076 		mov	r6, #16777216
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1542              		.loc 1 462 0
 1543 0010 0124     		movs	r4, #1
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1544              		.loc 1 457 0
 1545 0012 0290     		str	r0, [sp, #8]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1546              		.loc 1 468 0
 1547 0014 02A9     		add	r1, sp, #8
 1548 0016 41F28832 		movw	r2, #5000
 1549 001a 2848     		ldr	r0, .L108
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1550              		.loc 1 456 0
 1551 001c 0895     		str	r5, [sp, #32]
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1552              		.loc 1 458 0
 1553 001e 0993     		str	r3, [sp, #36]
 459:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 1554              		.loc 1 459 0
 1555 0020 0A93     		str	r3, [sp, #40]
ARM GAS  /tmp/ccVjWqsE.s 			page 51


 461:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 1556              		.loc 1 461 0
 1557 0022 0793     		str	r3, [sp, #28]
 463:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1558              		.loc 1 463 0
 1559 0024 0D93     		str	r3, [sp, #52]
 464:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1560              		.loc 1 464 0
 1561 0026 0E93     		str	r3, [sp, #56]
 465:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1562              		.loc 1 465 0
 1563 0028 0F93     		str	r3, [sp, #60]
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1564              		.loc 1 460 0
 1565 002a 0B96     		str	r6, [sp, #44]
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1566              		.loc 1 462 0
 1567 002c 0C94     		str	r4, [sp, #48]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1568              		.loc 1 468 0
 1569 002e FFF7FEFF 		bl	HAL_QSPI_Command
 1570              	.LVL61:
 1571 0032 10B1     		cbz	r0, .L106
 1572              	.L97:
 1573              	.LBE71:
 1574              	.LBE70:
 604:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 1575              		.loc 1 604 0
 1576 0034 0020     		movs	r0, #0
 1577              	.L102:
 605:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1578              		.loc 1 605 0
 1579 0036 10B0     		add	sp, sp, #64
 1580              	.LCFI43:
 1581              		.cfi_remember_state
 1582              		.cfi_def_cfa_offset 16
 1583              		@ sp needed
 1584 0038 70BD     		pop	{r4, r5, r6, pc}
 1585              	.L106:
 1586              	.LCFI44:
 1587              		.cfi_restore_state
 1588              	.LBB73:
 1589              	.LBB72:
 474:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1590              		.loc 1 474 0
 1591 003a 0DF10701 		add	r1, sp, #7
 1592 003e 41F28832 		movw	r2, #5000
 1593 0042 1E48     		ldr	r0, .L108
 1594 0044 FFF7FEFF 		bl	HAL_QSPI_Receive
 1595              	.LVL62:
 1596 0048 0028     		cmp	r0, #0
 1597 004a F3D1     		bne	.L97
 484:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1598              		.loc 1 484 0
 1599 004c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1600 0050 13F06C0F 		tst	r3, #108
 1601 0054 EED1     		bne	.L97
ARM GAS  /tmp/ccVjWqsE.s 			page 52


 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1602              		.loc 1 490 0
 1603 0056 0523     		movs	r3, #5
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1604              		.loc 1 493 0
 1605 0058 41F28832 		movw	r2, #5000
 1606 005c 02A9     		add	r1, sp, #8
 1607 005e 1748     		ldr	r0, .L108
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1608              		.loc 1 490 0
 1609 0060 0293     		str	r3, [sp, #8]
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1610              		.loc 1 493 0
 1611 0062 FFF7FEFF 		bl	HAL_QSPI_Command
 1612              	.LVL63:
 1613 0066 0028     		cmp	r0, #0
 1614 0068 E4D1     		bne	.L97
 499:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1615              		.loc 1 499 0
 1616 006a 0DF10701 		add	r1, sp, #7
 1617 006e 41F28832 		movw	r2, #5000
 1618 0072 1248     		ldr	r0, .L108
 1619 0074 FFF7FEFF 		bl	HAL_QSPI_Receive
 1620              	.LVL64:
 1621 0078 0346     		mov	r3, r0
 1622 007a 0028     		cmp	r0, #0
 1623 007c DAD1     		bne	.L97
 505:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1624              		.loc 1 505 0
 1625 007e 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1626 0082 D207     		lsls	r2, r2, #31
 1627 0084 D6D5     		bpl	.L97
 1628              	.LBE72:
 1629              	.LBE73:
 581:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1630              		.loc 1 581 0
 1631 0086 7526     		movs	r6, #117
 591:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1632              		.loc 1 591 0
 1633 0088 02A9     		add	r1, sp, #8
 1634 008a 41F28832 		movw	r2, #5000
 1635 008e 0B48     		ldr	r0, .L108
 580:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.Instruction       = PROG_ERASE_SUSPEND_CMD;
 1636              		.loc 1 580 0
 1637 0090 0895     		str	r5, [sp, #32]
 582:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1638              		.loc 1 582 0
 1639 0092 0993     		str	r3, [sp, #36]
 583:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DataMode          = QSPI_DATA_NONE;
 1640              		.loc 1 583 0
 1641 0094 0A93     		str	r3, [sp, #40]
 584:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DummyCycles       = 0;
 1642              		.loc 1 584 0
 1643 0096 0B93     		str	r3, [sp, #44]
 585:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1644              		.loc 1 585 0
 1645 0098 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccVjWqsE.s 			page 53


 586:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1646              		.loc 1 586 0
 1647 009a 0D93     		str	r3, [sp, #52]
 587:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1648              		.loc 1 587 0
 1649 009c 0E93     		str	r3, [sp, #56]
 588:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 1650              		.loc 1 588 0
 1651 009e 0F93     		str	r3, [sp, #60]
 581:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1652              		.loc 1 581 0
 1653 00a0 0296     		str	r6, [sp, #8]
 591:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1654              		.loc 1 591 0
 1655 00a2 FFF7FEFF 		bl	HAL_QSPI_Command
 1656              	.LVL65:
 1657 00a6 10B1     		cbz	r0, .L107
 593:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 1658              		.loc 1 593 0
 1659 00a8 2046     		mov	r0, r4
 605:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1660              		.loc 1 605 0
 1661 00aa 10B0     		add	sp, sp, #64
 1662              	.LCFI45:
 1663              		.cfi_remember_state
 1664              		.cfi_def_cfa_offset 16
 1665              		@ sp needed
 1666 00ac 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L107:
 1668              	.LCFI46:
 1669              		.cfi_restore_state
 596:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1670              		.loc 1 596 0
 1671 00ae FFF7FEFF 		bl	BSP_QSPI_GetStatus
 1672              	.LVL66:
 593:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 1673              		.loc 1 593 0
 1674 00b2 0838     		subs	r0, r0, #8
 1675 00b4 18BF     		it	ne
 1676 00b6 0120     		movne	r0, #1
 1677 00b8 BDE7     		b	.L102
 1678              	.L109:
 1679 00ba 00BF     		.align	2
 1680              	.L108:
 1681 00bc 00000000 		.word	QSPIHandle
 1682              		.cfi_endproc
 1683              	.LFE140:
 1685              		.section	.text.BSP_QSPI_ResumeErase,"ax",%progbits
 1686              		.align	1
 1687              		.p2align 2,,3
 1688              		.global	BSP_QSPI_ResumeErase
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1692              		.fpu fpv4-sp-d16
 1694              	BSP_QSPI_ResumeErase:
 1695              	.LFB141:
ARM GAS  /tmp/ccVjWqsE.s 			page 54


 612:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 1696              		.loc 1 612 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 64
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700 0000 70B5     		push	{r4, r5, r6, lr}
 1701              	.LCFI47:
 1702              		.cfi_def_cfa_offset 16
 1703              		.cfi_offset 4, -16
 1704              		.cfi_offset 5, -12
 1705              		.cfi_offset 6, -8
 1706              		.cfi_offset 14, -4
 1707 0002 90B0     		sub	sp, sp, #64
 1708              	.LCFI48:
 1709              		.cfi_def_cfa_offset 80
 1710              	.LBB76:
 1711              	.LBB77:
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1712              		.loc 1 457 0
 1713 0004 2B20     		movs	r0, #43
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1714              		.loc 1 458 0
 1715 0006 0023     		movs	r3, #0
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1716              		.loc 1 456 0
 1717 0008 4FF48075 		mov	r5, #256
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1718              		.loc 1 460 0
 1719 000c 4FF08076 		mov	r6, #16777216
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1720              		.loc 1 462 0
 1721 0010 0124     		movs	r4, #1
 457:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1722              		.loc 1 457 0
 1723 0012 0290     		str	r0, [sp, #8]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1724              		.loc 1 468 0
 1725 0014 02A9     		add	r1, sp, #8
 1726 0016 41F28832 		movw	r2, #5000
 1727 001a 2648     		ldr	r0, .L124
 456:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_SEC_REG_CMD;
 1728              		.loc 1 456 0
 1729 001c 0895     		str	r5, [sp, #32]
 458:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1730              		.loc 1 458 0
 1731 001e 0993     		str	r3, [sp, #36]
 459:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 1732              		.loc 1 459 0
 1733 0020 0A93     		str	r3, [sp, #40]
 461:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 1734              		.loc 1 461 0
 1735 0022 0793     		str	r3, [sp, #28]
 463:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1736              		.loc 1 463 0
 1737 0024 0D93     		str	r3, [sp, #52]
 464:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1738              		.loc 1 464 0
ARM GAS  /tmp/ccVjWqsE.s 			page 55


 1739 0026 0E93     		str	r3, [sp, #56]
 465:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1740              		.loc 1 465 0
 1741 0028 0F93     		str	r3, [sp, #60]
 460:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1742              		.loc 1 460 0
 1743 002a 0B96     		str	r6, [sp, #44]
 462:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1744              		.loc 1 462 0
 1745 002c 0C94     		str	r4, [sp, #48]
 468:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1746              		.loc 1 468 0
 1747 002e FFF7FEFF 		bl	HAL_QSPI_Command
 1748              	.LVL67:
 1749 0032 10B1     		cbz	r0, .L121
 1750              	.L113:
 1751              	.LBE77:
 1752              	.LBE76:
 649:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 1753              		.loc 1 649 0
 1754 0034 0020     		movs	r0, #0
 1755              	.L117:
 650:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1756              		.loc 1 650 0
 1757 0036 10B0     		add	sp, sp, #64
 1758              	.LCFI49:
 1759              		.cfi_remember_state
 1760              		.cfi_def_cfa_offset 16
 1761              		@ sp needed
 1762 0038 70BD     		pop	{r4, r5, r6, pc}
 1763              	.L121:
 1764              	.LCFI50:
 1765              		.cfi_restore_state
 1766              	.LBB81:
 1767              	.LBB78:
 474:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1768              		.loc 1 474 0
 1769 003a 0DF10701 		add	r1, sp, #7
 1770 003e 41F28832 		movw	r2, #5000
 1771 0042 1C48     		ldr	r0, .L124
 1772 0044 FFF7FEFF 		bl	HAL_QSPI_Receive
 1773              	.LVL68:
 1774 0048 0028     		cmp	r0, #0
 1775 004a F3D1     		bne	.L113
 480:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1776              		.loc 1 480 0
 1777 004c 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1778 0050 12F06003 		ands	r3, r2, #96
 1779 0054 EED1     		bne	.L113
 484:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1780              		.loc 1 484 0
 1781 0056 12F00C0F 		tst	r2, #12
 1782              	.LBE78:
 1783              	.LBE81:
 630:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1784              		.loc 1 630 0
 1785 005a 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccVjWqsE.s 			page 56


 1786              	.LBB82:
 1787              	.LBB79:
 484:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1788              		.loc 1 484 0
 1789 005c 18D0     		beq	.L122
 1790              	.LBE79:
 1791              	.LBE82:
 620:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1792              		.loc 1 620 0
 1793 005e 7A26     		movs	r6, #122
 630:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1794              		.loc 1 630 0
 1795 0060 41F28832 		movw	r2, #5000
 1796 0064 1348     		ldr	r0, .L124
 619:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.Instruction       = PROG_ERASE_RESUME_CMD;
 1797              		.loc 1 619 0
 1798 0066 0895     		str	r5, [sp, #32]
 621:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1799              		.loc 1 621 0
 1800 0068 0993     		str	r3, [sp, #36]
 622:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DataMode          = QSPI_DATA_NONE;
 1801              		.loc 1 622 0
 1802 006a 0A93     		str	r3, [sp, #40]
 623:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DummyCycles       = 0;
 1803              		.loc 1 623 0
 1804 006c 0B93     		str	r3, [sp, #44]
 624:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1805              		.loc 1 624 0
 1806 006e 0793     		str	r3, [sp, #28]
 625:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1807              		.loc 1 625 0
 1808 0070 0D93     		str	r3, [sp, #52]
 626:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1809              		.loc 1 626 0
 1810 0072 0E93     		str	r3, [sp, #56]
 627:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 1811              		.loc 1 627 0
 1812 0074 0F93     		str	r3, [sp, #60]
 620:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1813              		.loc 1 620 0
 1814 0076 0296     		str	r6, [sp, #8]
 630:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1815              		.loc 1 630 0
 1816 0078 FFF7FEFF 		bl	HAL_QSPI_Command
 1817              	.LVL69:
 1818 007c 10B1     		cbz	r0, .L123
 632:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 1819              		.loc 1 632 0
 1820 007e 2046     		mov	r0, r4
 650:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1821              		.loc 1 650 0
 1822 0080 10B0     		add	sp, sp, #64
 1823              	.LCFI51:
 1824              		.cfi_remember_state
 1825              		.cfi_def_cfa_offset 16
 1826              		@ sp needed
 1827 0082 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccVjWqsE.s 			page 57


 1828              	.L123:
 1829              	.LCFI52:
 1830              		.cfi_restore_state
 641:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     {
 1831              		.loc 1 641 0
 1832 0084 FFF7FEFF 		bl	BSP_QSPI_GetStatus
 1833              	.LVL70:
 632:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     }
 1834              		.loc 1 632 0
 1835 0088 0238     		subs	r0, r0, #2
 1836 008a 18BF     		it	ne
 1837 008c 0120     		movne	r0, #1
 1838 008e D2E7     		b	.L117
 1839              	.L122:
 1840              	.LBB83:
 1841              	.LBB80:
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1842              		.loc 1 490 0
 1843 0090 0523     		movs	r3, #5
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1844              		.loc 1 493 0
 1845 0092 41F28832 		movw	r2, #5000
 1846 0096 0748     		ldr	r0, .L124
 490:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1847              		.loc 1 490 0
 1848 0098 0293     		str	r3, [sp, #8]
 493:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1849              		.loc 1 493 0
 1850 009a FFF7FEFF 		bl	HAL_QSPI_Command
 1851              	.LVL71:
 1852 009e 0028     		cmp	r0, #0
 1853 00a0 C8D1     		bne	.L113
 499:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1854              		.loc 1 499 0
 1855 00a2 0DF10701 		add	r1, sp, #7
 1856 00a6 41F28832 		movw	r2, #5000
 1857 00aa 0248     		ldr	r0, .L124
 1858 00ac FFF7FEFF 		bl	HAL_QSPI_Receive
 1859              	.LVL72:
 1860 00b0 C0E7     		b	.L113
 1861              	.L125:
 1862 00b2 00BF     		.align	2
 1863              	.L124:
 1864 00b4 00000000 		.word	QSPIHandle
 1865              	.LBE80:
 1866              	.LBE83:
 1867              		.cfi_endproc
 1868              	.LFE141:
 1870              		.section	.text.BSP_QSPI_EnterDeepPowerDown,"ax",%progbits
 1871              		.align	1
 1872              		.p2align 2,,3
 1873              		.global	BSP_QSPI_EnterDeepPowerDown
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv4-sp-d16
 1879              	BSP_QSPI_EnterDeepPowerDown:
ARM GAS  /tmp/ccVjWqsE.s 			page 58


 1880              	.LFB142:
 657:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 1881              		.loc 1 657 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 56
 1884              		@ frame_needed = 0, uses_anonymous_args = 0
 1885 0000 30B5     		push	{r4, r5, lr}
 1886              	.LCFI53:
 1887              		.cfi_def_cfa_offset 12
 1888              		.cfi_offset 4, -12
 1889              		.cfi_offset 5, -8
 1890              		.cfi_offset 14, -4
 1891 0002 8FB0     		sub	sp, sp, #60
 1892              	.LCFI54:
 1893              		.cfi_def_cfa_offset 72
 663:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1894              		.loc 1 663 0
 1895 0004 0023     		movs	r3, #0
 661:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = DEEP_POWER_DOWN_CMD;
 1896              		.loc 1 661 0
 1897 0006 4FF48075 		mov	r5, #256
 662:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1898              		.loc 1 662 0
 1899 000a B924     		movs	r4, #185
 672:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1900              		.loc 1 672 0
 1901 000c 41F28832 		movw	r2, #5000
 1902 0010 6946     		mov	r1, sp
 1903 0012 0848     		ldr	r0, .L128
 661:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = DEEP_POWER_DOWN_CMD;
 1904              		.loc 1 661 0
 1905 0014 0695     		str	r5, [sp, #24]
 662:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1906              		.loc 1 662 0
 1907 0016 0094     		str	r4, [sp]
 663:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1908              		.loc 1 663 0
 1909 0018 0793     		str	r3, [sp, #28]
 664:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 1910              		.loc 1 664 0
 1911 001a 0893     		str	r3, [sp, #32]
 665:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1912              		.loc 1 665 0
 1913 001c 0993     		str	r3, [sp, #36]
 666:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1914              		.loc 1 666 0
 1915 001e 0593     		str	r3, [sp, #20]
 667:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1916              		.loc 1 667 0
 1917 0020 0B93     		str	r3, [sp, #44]
 668:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1918              		.loc 1 668 0
 1919 0022 0C93     		str	r3, [sp, #48]
 669:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 1920              		.loc 1 669 0
 1921 0024 0D93     		str	r3, [sp, #52]
 672:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 59


 1922              		.loc 1 672 0
 1923 0026 FFF7FEFF 		bl	HAL_QSPI_Command
 1924              	.LVL73:
 681:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1925              		.loc 1 681 0
 1926 002a 0030     		adds	r0, r0, #0
 1927 002c 18BF     		it	ne
 1928 002e 0120     		movne	r0, #1
 1929 0030 0FB0     		add	sp, sp, #60
 1930              	.LCFI55:
 1931              		.cfi_def_cfa_offset 12
 1932              		@ sp needed
 1933 0032 30BD     		pop	{r4, r5, pc}
 1934              	.L129:
 1935              		.align	2
 1936              	.L128:
 1937 0034 00000000 		.word	QSPIHandle
 1938              		.cfi_endproc
 1939              	.LFE142:
 1941              		.section	.text.BSP_QSPI_LeaveDeepPowerDown,"ax",%progbits
 1942              		.align	1
 1943              		.p2align 2,,3
 1944              		.global	BSP_QSPI_LeaveDeepPowerDown
 1945              		.syntax unified
 1946              		.thumb
 1947              		.thumb_func
 1948              		.fpu fpv4-sp-d16
 1950              	BSP_QSPI_LeaveDeepPowerDown:
 1951              	.LFB143:
 688:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 1952              		.loc 1 688 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 56
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 1956 0000 10B5     		push	{r4, lr}
 1957              	.LCFI56:
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 4, -8
 1960              		.cfi_offset 14, -4
 1961 0002 8EB0     		sub	sp, sp, #56
 1962              	.LCFI57:
 1963              		.cfi_def_cfa_offset 64
 693:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 1964              		.loc 1 693 0
 1965 0004 0023     		movs	r3, #0
 692:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = NO_OPERATION_CMD;
 1966              		.loc 1 692 0
 1967 0006 4FF48074 		mov	r4, #256
 703:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1968              		.loc 1 703 0
 1969 000a 41F28832 		movw	r2, #5000
 1970 000e 6946     		mov	r1, sp
 1971 0010 0848     		ldr	r0, .L132
 692:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = NO_OPERATION_CMD;
 1972              		.loc 1 692 0
 1973 0012 0694     		str	r4, [sp, #24]
 693:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
ARM GAS  /tmp/ccVjWqsE.s 			page 60


 1974              		.loc 1 693 0
 1975 0014 0093     		str	r3, [sp]
 694:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 1976              		.loc 1 694 0
 1977 0016 0793     		str	r3, [sp, #28]
 695:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 1978              		.loc 1 695 0
 1979 0018 0893     		str	r3, [sp, #32]
 696:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 1980              		.loc 1 696 0
 1981 001a 0993     		str	r3, [sp, #36]
 697:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 1982              		.loc 1 697 0
 1983 001c 0593     		str	r3, [sp, #20]
 698:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 1984              		.loc 1 698 0
 1985 001e 0B93     		str	r3, [sp, #44]
 699:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 1986              		.loc 1 699 0
 1987 0020 0C93     		str	r3, [sp, #48]
 700:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 1988              		.loc 1 700 0
 1989 0022 0D93     		str	r3, [sp, #52]
 703:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 1990              		.loc 1 703 0
 1991 0024 FFF7FEFF 		bl	HAL_QSPI_Command
 1992              	.LVL74:
 712:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 1993              		.loc 1 712 0
 1994 0028 0030     		adds	r0, r0, #0
 1995 002a 18BF     		it	ne
 1996 002c 0120     		movne	r0, #1
 1997 002e 0EB0     		add	sp, sp, #56
 1998              	.LCFI58:
 1999              		.cfi_def_cfa_offset 8
 2000              		@ sp needed
 2001 0030 10BD     		pop	{r4, pc}
 2002              	.L133:
 2003 0032 00BF     		.align	2
 2004              	.L132:
 2005 0034 00000000 		.word	QSPIHandle
 2006              		.cfi_endproc
 2007              	.LFE143:
 2009              		.section	.text.BSP_QSPI_MspInit,"ax",%progbits
 2010              		.align	1
 2011              		.p2align 2,,3
 2012              		.weak	BSP_QSPI_MspInit
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv4-sp-d16
 2018              	BSP_QSPI_MspInit:
 2019              	.LFB144:
 719:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2020              		.loc 1 719 0
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccVjWqsE.s 			page 61


 2023              		@ frame_needed = 0, uses_anonymous_args = 0
 2024              	.LBB84:
 723:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2025              		.loc 1 723 0
 2026 0000 164B     		ldr	r3, .L136
 2027              	.LBE84:
 739:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 2028              		.loc 1 739 0
 2029 0002 1748     		ldr	r0, .L136+4
 2030              	.LBB85:
 723:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2031              		.loc 1 723 0
 2032 0004 1A6D     		ldr	r2, [r3, #80]
 2033              	.LBE85:
 719:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2034              		.loc 1 719 0
 2035 0006 F0B5     		push	{r4, r5, r6, r7, lr}
 2036              	.LCFI59:
 2037              		.cfi_def_cfa_offset 20
 2038              		.cfi_offset 4, -20
 2039              		.cfi_offset 5, -16
 2040              		.cfi_offset 6, -12
 2041              		.cfi_offset 7, -8
 2042              		.cfi_offset 14, -4
 2043              	.LBB86:
 723:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2044              		.loc 1 723 0
 2045 0008 42F48072 		orr	r2, r2, #256
 2046 000c 1A65     		str	r2, [r3, #80]
 2047 000e 1A6D     		ldr	r2, [r3, #80]
 2048              	.LBE86:
 719:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2049              		.loc 1 719 0
 2050 0010 89B0     		sub	sp, sp, #36
 2051              	.LCFI60:
 2052              		.cfi_def_cfa_offset 56
 2053              	.LBB87:
 723:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2054              		.loc 1 723 0
 2055 0012 02F48072 		and	r2, r2, #256
 2056 0016 0192     		str	r2, [sp, #4]
 2057 0018 019A     		ldr	r2, [sp, #4]
 2058              	.LBE87:
 726:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_RELEASE_RESET();
 2059              		.loc 1 726 0
 2060 001a 1A6B     		ldr	r2, [r3, #48]
 2061 001c 42F48072 		orr	r2, r2, #256
 2062 0020 1A63     		str	r2, [r3, #48]
 727:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2063              		.loc 1 727 0
 2064 0022 1A6B     		ldr	r2, [r3, #48]
 2065 0024 22F48072 		bic	r2, r2, #256
 2066 0028 1A63     		str	r2, [r3, #48]
 2067              	.LBB88:
 730:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2068              		.loc 1 730 0
 2069 002a DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccVjWqsE.s 			page 62


 2070 002c 42F01002 		orr	r2, r2, #16
 2071 0030 DA64     		str	r2, [r3, #76]
 2072 0032 DB6C     		ldr	r3, [r3, #76]
 2073 0034 03F01003 		and	r3, r3, #16
 2074 0038 0293     		str	r3, [sp, #8]
 2075              	.LBE88:
 737:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 2076              		.loc 1 737 0
 2077 003a 0322     		movs	r2, #3
 738:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 2078              		.loc 1 738 0
 2079 003c 0A23     		movs	r3, #10
 733:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****                               GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 2080              		.loc 1 733 0
 2081 003e 4FF47C46 		mov	r6, #64512
 735:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pull      = GPIO_NOPULL;
 2082              		.loc 1 735 0
 2083 0042 0225     		movs	r5, #2
 736:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 2084              		.loc 1 736 0
 2085 0044 0024     		movs	r4, #0
 739:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 2086              		.loc 1 739 0
 2087 0046 03A9     		add	r1, sp, #12
 2088              	.LBB89:
 730:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2089              		.loc 1 730 0
 2090 0048 029F     		ldr	r7, [sp, #8]
 2091              	.LBE89:
 733:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****                               GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 2092              		.loc 1 733 0
 2093 004a 0396     		str	r6, [sp, #12]
 735:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pull      = GPIO_NOPULL;
 2094              		.loc 1 735 0
 2095 004c 0495     		str	r5, [sp, #16]
 736:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 2096              		.loc 1 736 0
 2097 004e 0594     		str	r4, [sp, #20]
 737:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 2098              		.loc 1 737 0
 2099 0050 0692     		str	r2, [sp, #24]
 738:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 2100              		.loc 1 738 0
 2101 0052 0793     		str	r3, [sp, #28]
 739:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 2102              		.loc 1 739 0
 2103 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 2104              	.LVL75:
 740:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2105              		.loc 1 740 0
 2106 0058 09B0     		add	sp, sp, #36
 2107              	.LCFI61:
 2108              		.cfi_def_cfa_offset 20
 2109              		@ sp needed
 2110 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 2111              	.L137:
 2112              		.align	2
ARM GAS  /tmp/ccVjWqsE.s 			page 63


 2113              	.L136:
 2114 005c 00100240 		.word	1073876992
 2115 0060 00100048 		.word	1207963648
 2116              		.cfi_endproc
 2117              	.LFE144:
 2119              		.section	.text.BSP_QSPI_Init,"ax",%progbits
 2120              		.align	1
 2121              		.p2align 2,,3
 2122              		.global	BSP_QSPI_Init
 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu fpv4-sp-d16
 2128              	BSP_QSPI_Init:
 2129              	.LFB130:
 124:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 2130              		.loc 1 124 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 144
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 2134 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2135              	.LCFI62:
 2136              		.cfi_def_cfa_offset 36
 2137              		.cfi_offset 4, -36
 2138              		.cfi_offset 5, -32
 2139              		.cfi_offset 6, -28
 2140              		.cfi_offset 7, -24
 2141              		.cfi_offset 8, -20
 2142              		.cfi_offset 9, -16
 2143              		.cfi_offset 10, -12
 2144              		.cfi_offset 11, -8
 2145              		.cfi_offset 14, -4
 125:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2146              		.loc 1 125 0
 2147 0004 1C4C     		ldr	r4, .L182
 2148 0006 1D4B     		ldr	r3, .L182+4
 2149 0008 2360     		str	r3, [r4]
 124:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 2150              		.loc 1 124 0
 2151 000a A5B0     		sub	sp, sp, #148
 2152              	.LCFI63:
 2153              		.cfi_def_cfa_offset 184
 128:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2154              		.loc 1 128 0
 2155 000c 2046     		mov	r0, r4
 2156 000e FFF7FEFF 		bl	HAL_QSPI_DeInit
 2157              	.LVL76:
 2158 0012 18B1     		cbz	r0, .L180
 2159              	.L149:
 164:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2160              		.loc 1 164 0
 2161 0014 0120     		movs	r0, #1
 2162              	.L164:
 176:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2163              		.loc 1 176 0
 2164 0016 25B0     		add	sp, sp, #148
 2165              	.LCFI64:
ARM GAS  /tmp/ccVjWqsE.s 			page 64


 2166              		.cfi_remember_state
 2167              		.cfi_def_cfa_offset 36
 2168              		@ sp needed
 2169 0018 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2170              	.L180:
 2171              	.LCFI65:
 2172              		.cfi_restore_state
 2173 001c 0746     		mov	r7, r0
 137:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.FifoThreshold      = 4;
 2174              		.loc 1 137 0
 2175 001e 0226     		movs	r6, #2
 138:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_NONE;
 2176              		.loc 1 138 0
 2177 0020 0425     		movs	r5, #4
 134:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 2178              		.loc 1 134 0
 2179 0022 FFF7FEFF 		bl	BSP_QSPI_MspInit
 2180              	.LVL77:
 139:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.FlashSize          = POSITION_VAL(MX25R6435F_FLASH_SIZE) - 1;
 2181              		.loc 1 139 0
 2182 0026 E760     		str	r7, [r4, #12]
 2183              	.LVL78:
 137:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.FifoThreshold      = 4;
 2184              		.loc 1 137 0
 2185 0028 6660     		str	r6, [r4, #4]
 138:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_NONE;
 2186              		.loc 1 138 0
 2187 002a A560     		str	r5, [r4, #8]
 2188              	.LBB104:
 2189              	.LBB105:
 2190              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  /tmp/ccVjWqsE.s 			page 65


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccVjWqsE.s 			page 66


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/ccVjWqsE.s 			page 67


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccVjWqsE.s 			page 68


 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVjWqsE.s 			page 69


 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccVjWqsE.s 			page 70


 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
ARM GAS  /tmp/ccVjWqsE.s 			page 71


 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccVjWqsE.s 			page 72


 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccVjWqsE.s 			page 73


 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
ARM GAS  /tmp/ccVjWqsE.s 			page 74


 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  /tmp/ccVjWqsE.s 			page 75


 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
ARM GAS  /tmp/ccVjWqsE.s 			page 76


 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccVjWqsE.s 			page 77


 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccVjWqsE.s 			page 78


 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
ARM GAS  /tmp/ccVjWqsE.s 			page 79


 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVjWqsE.s 			page 80


 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccVjWqsE.s 			page 81


 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2191              		.loc 2 988 0
 2192 002c 4FF40003 		mov	r3, #8388608
 2193              		.syntax unified
 2194              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2195 0030 93FAA3F3 		rbit r3, r3
 2196              	@ 0 "" 2
 2197              	.LVL79:
ARM GAS  /tmp/ccVjWqsE.s 			page 82


 2198              		.thumb
 2199              		.syntax unified
 2200              	.LBE105:
 2201              	.LBE104:
 140:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 2202              		.loc 1 140 0
 2203 0034 B3FA83F3 		clz	r3, r3
 2204 0038 013B     		subs	r3, r3, #1
 144:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2205              		.loc 1 144 0
 2206 003a 2046     		mov	r0, r4
 140:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 2207              		.loc 1 140 0
 2208 003c 2361     		str	r3, [r4, #16]
 141:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 2209              		.loc 1 141 0
 2210 003e 6761     		str	r7, [r4, #20]
 142:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2211              		.loc 1 142 0
 2212 0040 A761     		str	r7, [r4, #24]
 144:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2213              		.loc 1 144 0
 2214 0042 FFF7FEFF 		bl	HAL_QSPI_Init
 2215              	.LVL80:
 2216 0046 0028     		cmp	r0, #0
 2217 0048 E4D1     		bne	.L149
 2218              	.LVL81:
 2219              	.LBB106:
 2220              	.LBB107:
 784:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2221              		.loc 1 784 0
 2222 004a 6623     		movs	r3, #102
 785:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2223              		.loc 1 785 0
 2224 004c 0F90     		str	r0, [sp, #60]
 786:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 2225              		.loc 1 786 0
 2226 004e 1090     		str	r0, [sp, #64]
 787:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2227              		.loc 1 787 0
 2228 0050 1190     		str	r0, [sp, #68]
 788:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2229              		.loc 1 788 0
 2230 0052 0D90     		str	r0, [sp, #52]
 789:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2231              		.loc 1 789 0
 2232 0054 1390     		str	r0, [sp, #76]
 790:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2233              		.loc 1 790 0
 2234 0056 1490     		str	r0, [sp, #80]
 791:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2235              		.loc 1 791 0
 2236 0058 1590     		str	r0, [sp, #84]
 783:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = RESET_ENABLE_CMD;
 2237              		.loc 1 783 0
 2238 005a 4FF48077 		mov	r7, #256
 794:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 83


 2239              		.loc 1 794 0
 2240 005e 08A9     		add	r1, sp, #32
 2241 0060 41F28832 		movw	r2, #5000
 2242 0064 2046     		mov	r0, r4
 783:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = RESET_ENABLE_CMD;
 2243              		.loc 1 783 0
 2244 0066 0E97     		str	r7, [sp, #56]
 784:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2245              		.loc 1 784 0
 2246 0068 0893     		str	r3, [sp, #32]
 794:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2247              		.loc 1 794 0
 2248 006a FFF7FEFF 		bl	HAL_QSPI_Command
 2249              	.LVL82:
 2250 006e 38B1     		cbz	r0, .L181
 2251              	.L140:
 2252              	.LBE107:
 2253              	.LBE106:
 152:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2254              		.loc 1 152 0
 2255 0070 0420     		movs	r0, #4
 176:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2256              		.loc 1 176 0
 2257 0072 25B0     		add	sp, sp, #148
 2258              	.LCFI66:
 2259              		.cfi_remember_state
 2260              		.cfi_def_cfa_offset 36
 2261              		@ sp needed
 2262 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2263              	.L183:
 2264              		.align	2
 2265              	.L182:
 2266 0078 00000000 		.word	QSPIHandle
 2267 007c 001000A0 		.word	-1610608640
 2268              	.L181:
 2269              	.LCFI67:
 2270              		.cfi_restore_state
 2271              	.LBB111:
 2272              	.LBB110:
 800:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2273              		.loc 1 800 0
 2274 0080 9923     		movs	r3, #153
 801:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2275              		.loc 1 801 0
 2276 0082 41F28832 		movw	r2, #5000
 2277 0086 08A9     		add	r1, sp, #32
 2278 0088 2046     		mov	r0, r4
 800:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2279              		.loc 1 800 0
 2280 008a 0893     		str	r3, [sp, #32]
 801:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2281              		.loc 1 801 0
 2282 008c FFF7FEFF 		bl	HAL_QSPI_Command
 2283              	.LVL83:
 2284 0090 8646     		mov	lr, r0
 2285 0092 0028     		cmp	r0, #0
 2286 0094 ECD1     		bne	.L140
ARM GAS  /tmp/ccVjWqsE.s 			page 84


 2287              	.LVL84:
 2288              	.LBB108:
 2289              	.LBB109:
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 2290              		.loc 1 883 0
 2291 0096 4FF00108 		mov	r8, #1
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2292              		.loc 1 889 0
 2293 009a 41F28833 		movw	r3, #5000
 872:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 2294              		.loc 1 872 0
 2295 009e 1C97     		str	r7, [sp, #112]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2296              		.loc 1 889 0
 2297 00a0 02AA     		add	r2, sp, #8
 2298 00a2 16A9     		add	r1, sp, #88
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2299              		.loc 1 873 0
 2300 00a4 4FF00509 		mov	r9, #5
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2301              		.loc 1 876 0
 2302 00a8 4FF0807A 		mov	r10, #16777216
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2303              		.loc 1 887 0
 2304 00ac 4FF4800B 		mov	fp, #4194304
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2305              		.loc 1 889 0
 2306 00b0 2046     		mov	r0, r4
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 2307              		.loc 1 886 0
 2308 00b2 1027     		movs	r7, #16
 874:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2309              		.loc 1 874 0
 2310 00b4 CDF874E0 		str	lr, [sp, #116]
 875:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 2311              		.loc 1 875 0
 2312 00b8 CDF878E0 		str	lr, [sp, #120]
 877:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2313              		.loc 1 877 0
 2314 00bc CDF86CE0 		str	lr, [sp, #108]
 878:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2315              		.loc 1 878 0
 2316 00c0 CDF884E0 		str	lr, [sp, #132]
 879:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2317              		.loc 1 879 0
 2318 00c4 CDF888E0 		str	lr, [sp, #136]
 880:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2319              		.loc 1 880 0
 2320 00c8 CDF88CE0 		str	lr, [sp, #140]
 882:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WIP;
 2321              		.loc 1 882 0
 2322 00cc CDF808E0 		str	lr, [sp, #8]
 884:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 2323              		.loc 1 884 0
 2324 00d0 CDF818E0 		str	lr, [sp, #24]
 873:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2325              		.loc 1 873 0
ARM GAS  /tmp/ccVjWqsE.s 			page 85


 2326 00d4 CDF85890 		str	r9, [sp, #88]
 876:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2327              		.loc 1 876 0
 2328 00d8 CDF87CA0 		str	r10, [sp, #124]
 883:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 2329              		.loc 1 883 0
 2330 00dc CDF80C80 		str	r8, [sp, #12]
 885:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 2331              		.loc 1 885 0
 2332 00e0 CDF81480 		str	r8, [sp, #20]
 886:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 2333              		.loc 1 886 0
 2334 00e4 0497     		str	r7, [sp, #16]
 887:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2335              		.loc 1 887 0
 2336 00e6 CDF81CB0 		str	fp, [sp, #28]
 889:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2337              		.loc 1 889 0
 2338 00ea FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 2339              	.LVL85:
 2340 00ee 0346     		mov	r3, r0
 2341 00f0 0028     		cmp	r0, #0
 2342 00f2 BDD1     		bne	.L140
 2343              	.LVL86:
 2344              	.LBE109:
 2345              	.LBE108:
 2346              	.LBE110:
 2347              	.LBE111:
 2348              	.LBB112:
 2349              	.LBB113:
 896:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 897:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 898:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function enables/disables the Quad mode of the memory.
 899:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  hqspi     : QSPI handle
 900:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Operation : QSPI_QUAD_ENABLE or QSPI_QUAD_DISABLE mode  
 901:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 902:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 903:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_QuadMode(QSPI_HandleTypeDef *hqspi, uint8_t Operation)
 904:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 905:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 906:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   uint8_t reg;
 907:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 908:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Read status register */
 909:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 2350              		.loc 1 909 0
 2351 00f4 4FF48075 		mov	r5, #256
 910:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 911:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 912:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 913:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 914:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 915:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 916:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 917:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 918:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 919:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 920:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
ARM GAS  /tmp/ccVjWqsE.s 			page 86


 2352              		.loc 1 920 0
 2353 00f8 41F28832 		movw	r2, #5000
 2354 00fc 08A9     		add	r1, sp, #32
 2355 00fe 2046     		mov	r0, r4
 909:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 2356              		.loc 1 909 0
 2357 0100 0E95     		str	r5, [sp, #56]
 910:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 2358              		.loc 1 910 0
 2359 0102 CDF82090 		str	r9, [sp, #32]
 911:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2360              		.loc 1 911 0
 2361 0106 0F93     		str	r3, [sp, #60]
 912:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 2362              		.loc 1 912 0
 2363 0108 1093     		str	r3, [sp, #64]
 913:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2364              		.loc 1 913 0
 2365 010a CDF844A0 		str	r10, [sp, #68]
 914:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
 2366              		.loc 1 914 0
 2367 010e 0D93     		str	r3, [sp, #52]
 915:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2368              		.loc 1 915 0
 2369 0110 CDF84880 		str	r8, [sp, #72]
 916:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2370              		.loc 1 916 0
 2371 0114 1393     		str	r3, [sp, #76]
 917:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2372              		.loc 1 917 0
 2373 0116 1493     		str	r3, [sp, #80]
 918:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2374              		.loc 1 918 0
 2375 0118 1593     		str	r3, [sp, #84]
 2376              		.loc 1 920 0
 2377 011a FFF7FEFF 		bl	HAL_QSPI_Command
 2378              	.LVL87:
 2379 011e 0028     		cmp	r0, #0
 2380 0120 7FF478AF 		bne	.L149
 921:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 922:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 923:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 924:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 925:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2381              		.loc 1 925 0
 2382 0124 01A9     		add	r1, sp, #4
 2383 0126 41F28832 		movw	r2, #5000
 2384 012a 2046     		mov	r0, r4
 2385 012c FFF7FEFF 		bl	HAL_QSPI_Receive
 2386              	.LVL88:
 2387 0130 0028     		cmp	r0, #0
 2388 0132 7FF46FAF 		bne	.L149
 2389              	.LVL89:
 2390              	.LBB114:
 2391              	.LBB115:
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 2392              		.loc 1 826 0
ARM GAS  /tmp/ccVjWqsE.s 			page 87


 2393 0136 4FF48071 		mov	r1, #256
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2394              		.loc 1 827 0
 2395 013a 0623     		movs	r3, #6
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 2396              		.loc 1 826 0
 2397 013c 1C91     		str	r1, [sp, #112]
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2398              		.loc 1 828 0
 2399 013e 1D90     		str	r0, [sp, #116]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 2400              		.loc 1 829 0
 2401 0140 1E90     		str	r0, [sp, #120]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2402              		.loc 1 830 0
 2403 0142 1F90     		str	r0, [sp, #124]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2404              		.loc 1 831 0
 2405 0144 1B90     		str	r0, [sp, #108]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2406              		.loc 1 832 0
 2407 0146 2190     		str	r0, [sp, #132]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2408              		.loc 1 833 0
 2409 0148 2290     		str	r0, [sp, #136]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2410              		.loc 1 834 0
 2411 014a 2390     		str	r0, [sp, #140]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2412              		.loc 1 836 0
 2413 014c 41F28832 		movw	r2, #5000
 2414 0150 16A9     		add	r1, sp, #88
 2415 0152 2046     		mov	r0, r4
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2416              		.loc 1 827 0
 2417 0154 1693     		str	r3, [sp, #88]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2418              		.loc 1 836 0
 2419 0156 FFF7FEFF 		bl	HAL_QSPI_Command
 2420              	.LVL90:
 2421 015a 0028     		cmp	r0, #0
 2422 015c 7FF45AAF 		bne	.L149
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 2423              		.loc 1 844 0
 2424 0160 0690     		str	r0, [sp, #24]
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 2425              		.loc 1 846 0
 2426 0162 1020     		movs	r0, #16
 2427 0164 0490     		str	r0, [sp, #16]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2428              		.loc 1 852 0
 2429 0166 41F28833 		movw	r3, #5000
 2430 016a 02AA     		add	r2, sp, #8
 2431 016c 16A9     		add	r1, sp, #88
 2432 016e 2046     		mov	r0, r4
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 2433              		.loc 1 842 0
ARM GAS  /tmp/ccVjWqsE.s 			page 88


 2434 0170 0296     		str	r6, [sp, #8]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 2435              		.loc 1 843 0
 2436 0172 0396     		str	r6, [sp, #12]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 2437              		.loc 1 845 0
 2438 0174 CDF81480 		str	r8, [sp, #20]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2439              		.loc 1 847 0
 2440 0178 CDF81CB0 		str	fp, [sp, #28]
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 2441              		.loc 1 849 0
 2442 017c CDF85890 		str	r9, [sp, #88]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2443              		.loc 1 850 0
 2444 0180 CDF87CA0 		str	r10, [sp, #124]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2445              		.loc 1 852 0
 2446 0184 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 2447              	.LVL91:
 2448 0188 0028     		cmp	r0, #0
 2449 018a 7FF443AF 		bne	.L149
 2450              	.LBE115:
 2451              	.LBE114:
 926:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 927:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 928:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 929:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 930:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
 931:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
 932:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 933:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 934:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 935:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 936:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Activate/deactivate the Quad mode */
 937:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (Operation == QSPI_QUAD_ENABLE)
 938:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 939:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     SET_BIT(reg, MX25R6435F_SR_QE);
 2452              		.loc 1 939 0
 2453 018e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 940:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 941:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   else
 942:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 943:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     CLEAR_BIT(reg, MX25R6435F_SR_QE);
 944:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 945:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 946:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = WRITE_STATUS_CFG_REG_CMD;
 2454              		.loc 1 946 0
 2455 0192 CDF82080 		str	r8, [sp, #32]
 939:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2456              		.loc 1 939 0
 2457 0196 43F04003 		orr	r3, r3, #64
 947:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 948:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2458              		.loc 1 948 0
 2459 019a 41F28832 		movw	r2, #5000
 2460 019e 08A9     		add	r1, sp, #32
ARM GAS  /tmp/ccVjWqsE.s 			page 89


 2461 01a0 2046     		mov	r0, r4
 939:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2462              		.loc 1 939 0
 2463 01a2 8DF80430 		strb	r3, [sp, #4]
 2464              		.loc 1 948 0
 2465 01a6 FFF7FEFF 		bl	HAL_QSPI_Command
 2466              	.LVL92:
 2467 01aa 0028     		cmp	r0, #0
 2468 01ac 7FF432AF 		bne	.L149
 949:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 950:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 951:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 952:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 953:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Transmit(&QSPIHandle, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2469              		.loc 1 953 0
 2470 01b0 41F28832 		movw	r2, #5000
 2471 01b4 01A9     		add	r1, sp, #4
 2472 01b6 6748     		ldr	r0, .L184
 2473 01b8 FFF7FEFF 		bl	HAL_QSPI_Transmit
 2474              	.LVL93:
 2475 01bc 0028     		cmp	r0, #0
 2476 01be 7FF429AF 		bne	.L149
 954:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 955:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 956:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 957:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 958:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Wait that memory is ready */  
 959:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_AutoPollingMemReady(&QSPIHandle, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 2477              		.loc 1 959 0
 2478 01c2 41F28830 		movw	r0, #5000
 2479 01c6 FFF7FEFF 		bl	QSPI_AutoPollingMemReady.isra.0
 2480              	.LVL94:
 2481 01ca 0028     		cmp	r0, #0
 2482 01cc 7FF422AF 		bne	.L149
 960:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 961:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 962:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 963:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 964:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check the configuration has been correctly done */
 965:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = READ_STATUS_REG_CMD;
 2483              		.loc 1 965 0
 2484 01d0 0527     		movs	r7, #5
 966:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 967:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2485              		.loc 1 967 0
 2486 01d2 41F28832 		movw	r2, #5000
 2487 01d6 08A9     		add	r1, sp, #32
 2488 01d8 5E48     		ldr	r0, .L184
 965:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2489              		.loc 1 965 0
 2490 01da 0897     		str	r7, [sp, #32]
 2491              		.loc 1 967 0
 2492 01dc FFF7FEFF 		bl	HAL_QSPI_Command
 2493              	.LVL95:
 2494 01e0 0028     		cmp	r0, #0
 2495 01e2 7FF417AF 		bne	.L149
 968:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 90


 969:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 970:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 971:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 972:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2496              		.loc 1 972 0
 2497 01e6 41F28832 		movw	r2, #5000
 2498 01ea 01A9     		add	r1, sp, #4
 2499 01ec 5948     		ldr	r0, .L184
 2500 01ee FFF7FEFF 		bl	HAL_QSPI_Receive
 2501              	.LVL96:
 2502 01f2 0028     		cmp	r0, #0
 2503 01f4 7FF40EAF 		bne	.L149
 973:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 974:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 975:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 976:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 977:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if ((((reg & MX25R6435F_SR_QE) == 0) && (Operation == QSPI_QUAD_ENABLE)) ||
 2504              		.loc 1 977 0
 2505 01f8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2506 01fc 5A06     		lsls	r2, r3, #25
 2507 01fe 7FF509AF 		bpl	.L149
 2508              	.LVL97:
 2509              	.LBE113:
 2510              	.LBE112:
 2511              	.LBB116:
 2512              	.LBB117:
 978:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****       (((reg & MX25R6435F_SR_QE) != 0) && (Operation == QSPI_QUAD_DISABLE)))
 979:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 980:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
 981:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 982:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 983:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   return QSPI_OK;
 984:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 985:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 986:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** /**
 987:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @brief  This function enables/disables the high performance mode of the memory.
 988:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  hqspi     : QSPI handle
 989:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @param  Operation : QSPI_HIGH_PERF_ENABLE or QSPI_HIGH_PERF_DISABLE high performance mode    
 990:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   * @retval None
 991:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   */
 992:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** static uint8_t QSPI_HighPerfMode(QSPI_HandleTypeDef *hqspi, uint8_t Operation)
 993:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** {
 994:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPI_CommandTypeDef sCommand;
 995:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   uint8_t reg[3];
 996:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 997:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Read status register */
 998:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 2513              		.loc 1 998 0
 2514 0202 4FF48075 		mov	r5, #256
 999:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
1000:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
1001:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
1002:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 2515              		.loc 1 1002 0
 2516 0206 4FF08076 		mov	r6, #16777216
1003:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
1004:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData            = 1;
ARM GAS  /tmp/ccVjWqsE.s 			page 91


 2517              		.loc 1 1004 0
 2518 020a 0123     		movs	r3, #1
1000:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2519              		.loc 1 1000 0
 2520 020c 0F90     		str	r0, [sp, #60]
1001:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_1_LINE;
 2521              		.loc 1 1001 0
 2522 020e 1090     		str	r0, [sp, #64]
1003:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2523              		.loc 1 1003 0
 2524 0210 0D90     		str	r0, [sp, #52]
1005:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2525              		.loc 1 1005 0
 2526 0212 1390     		str	r0, [sp, #76]
1006:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2527              		.loc 1 1006 0
 2528 0214 1490     		str	r0, [sp, #80]
1007:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2529              		.loc 1 1007 0
 2530 0216 1590     		str	r0, [sp, #84]
1008:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1009:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2531              		.loc 1 1009 0
 2532 0218 41F28832 		movw	r2, #5000
 2533 021c 08A9     		add	r1, sp, #32
 2534 021e 4D48     		ldr	r0, .L184
 999:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2535              		.loc 1 999 0
 2536 0220 0897     		str	r7, [sp, #32]
 998:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = READ_STATUS_REG_CMD;
 2537              		.loc 1 998 0
 2538 0222 0E95     		str	r5, [sp, #56]
1002:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2539              		.loc 1 1002 0
 2540 0224 1196     		str	r6, [sp, #68]
1004:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2541              		.loc 1 1004 0
 2542 0226 1293     		str	r3, [sp, #72]
 2543              		.loc 1 1009 0
 2544 0228 FFF7FEFF 		bl	HAL_QSPI_Command
 2545              	.LVL98:
 2546 022c 0028     		cmp	r0, #0
 2547 022e 7FF4F1AE 		bne	.L149
1010:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1011:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1012:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1013:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1014:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2548              		.loc 1 1014 0
 2549 0232 41F28832 		movw	r2, #5000
 2550 0236 01A9     		add	r1, sp, #4
 2551 0238 4648     		ldr	r0, .L184
 2552 023a FFF7FEFF 		bl	HAL_QSPI_Receive
 2553              	.LVL99:
 2554 023e 0028     		cmp	r0, #0
 2555 0240 7FF4E8AE 		bne	.L149
1015:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
ARM GAS  /tmp/ccVjWqsE.s 			page 92


1016:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1017:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1018:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1019:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Read configuration registers */
1020:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = READ_CFG_REG_CMD;
 2556              		.loc 1 1020 0
 2557 0244 1520     		movs	r0, #21
1021:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 2;
 2558              		.loc 1 1021 0
 2559 0246 0223     		movs	r3, #2
1020:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 2;
 2560              		.loc 1 1020 0
 2561 0248 0890     		str	r0, [sp, #32]
1022:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1023:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2562              		.loc 1 1023 0
 2563 024a 41F28832 		movw	r2, #5000
 2564 024e 08A9     		add	r1, sp, #32
 2565 0250 4048     		ldr	r0, .L184
1021:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2566              		.loc 1 1021 0
 2567 0252 1293     		str	r3, [sp, #72]
 2568              		.loc 1 1023 0
 2569 0254 FFF7FEFF 		bl	HAL_QSPI_Command
 2570              	.LVL100:
 2571 0258 0028     		cmp	r0, #0
 2572 025a 7FF4DBAE 		bne	.L149
1024:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1025:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1026:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1027:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1028:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &(reg[1]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2573              		.loc 1 1028 0
 2574 025e 41F28832 		movw	r2, #5000
 2575 0262 0DF10501 		add	r1, sp, #5
 2576 0266 3B48     		ldr	r0, .L184
 2577 0268 FFF7FEFF 		bl	HAL_QSPI_Receive
 2578              	.LVL101:
 2579 026c 0028     		cmp	r0, #0
 2580 026e 7FF4D1AE 		bne	.L149
 2581              	.LVL102:
 2582              	.LBB118:
 2583              	.LBB119:
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2584              		.loc 1 827 0
 2585 0272 0623     		movs	r3, #6
 828:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 2586              		.loc 1 828 0
 2587 0274 1D90     		str	r0, [sp, #116]
 829:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode          = QSPI_DATA_NONE;
 2588              		.loc 1 829 0
 2589 0276 1E90     		str	r0, [sp, #120]
 830:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DummyCycles       = 0;
 2590              		.loc 1 830 0
 2591 0278 1F90     		str	r0, [sp, #124]
 831:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrMode           = QSPI_DDR_MODE_DISABLE;
 2592              		.loc 1 831 0
ARM GAS  /tmp/ccVjWqsE.s 			page 93


 2593 027a 1B90     		str	r0, [sp, #108]
 832:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 2594              		.loc 1 832 0
 2595 027c 2190     		str	r0, [sp, #132]
 833:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 2596              		.loc 1 833 0
 2597 027e 2290     		str	r0, [sp, #136]
 834:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2598              		.loc 1 834 0
 2599 0280 2390     		str	r0, [sp, #140]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2600              		.loc 1 836 0
 2601 0282 41F28832 		movw	r2, #5000
 2602 0286 16A9     		add	r1, sp, #88
 2603 0288 3248     		ldr	r0, .L184
 826:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction       = WRITE_ENABLE_CMD;
 2604              		.loc 1 826 0
 2605 028a 1C95     		str	r5, [sp, #112]
 827:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.AddressMode       = QSPI_ADDRESS_NONE;
 2606              		.loc 1 827 0
 2607 028c 1693     		str	r3, [sp, #88]
 836:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2608              		.loc 1 836 0
 2609 028e FFF7FEFF 		bl	HAL_QSPI_Command
 2610              	.LVL103:
 2611 0292 0028     		cmp	r0, #0
 2612 0294 7FF4BEAE 		bne	.L149
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 2613              		.loc 1 846 0
 2614 0298 1027     		movs	r7, #16
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2615              		.loc 1 847 0
 2616 029a 4FF48003 		mov	r3, #4194304
 844:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.StatusBytesSize = 1;
 2617              		.loc 1 844 0
 2618 029e 0690     		str	r0, [sp, #24]
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 2619              		.loc 1 849 0
 2620 02a0 0520     		movs	r0, #5
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 2621              		.loc 1 842 0
 2622 02a2 0226     		movs	r6, #2
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 2623              		.loc 1 845 0
 2624 02a4 0125     		movs	r5, #1
 846:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 2625              		.loc 1 846 0
 2626 02a6 0497     		str	r7, [sp, #16]
 847:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2627              		.loc 1 847 0
 2628 02a8 0793     		str	r3, [sp, #28]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2629              		.loc 1 850 0
 2630 02aa 4FF08077 		mov	r7, #16777216
 849:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.DataMode       = QSPI_DATA_1_LINE;
 2631              		.loc 1 849 0
 2632 02ae 1690     		str	r0, [sp, #88]
ARM GAS  /tmp/ccVjWqsE.s 			page 94


 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2633              		.loc 1 852 0
 2634 02b0 02AA     		add	r2, sp, #8
 2635 02b2 16A9     		add	r1, sp, #88
 2636 02b4 41F28833 		movw	r3, #5000
 2637 02b8 2648     		ldr	r0, .L184
 842:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Mask            = MX25R6435F_SR_WEL;
 2638              		.loc 1 842 0
 2639 02ba 0296     		str	r6, [sp, #8]
 843:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.MatchMode       = QSPI_MATCH_MODE_AND;
 2640              		.loc 1 843 0
 2641 02bc 0396     		str	r6, [sp, #12]
 845:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sConfig.Interval        = 0x10;
 2642              		.loc 1 845 0
 2643 02be 0595     		str	r5, [sp, #20]
 850:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2644              		.loc 1 850 0
 2645 02c0 1F97     		str	r7, [sp, #124]
 852:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2646              		.loc 1 852 0
 2647 02c2 FFF7FEFF 		bl	HAL_QSPI_AutoPolling
 2648              	.LVL104:
 2649 02c6 0028     		cmp	r0, #0
 2650 02c8 7FF4A4AE 		bne	.L149
 2651              	.LBE119:
 2652              	.LBE118:
1029:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1030:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1031:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1032:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1033:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Enable write operations */
1034:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_WriteEnable(&QSPIHandle) != QSPI_OK)
1035:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1036:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1037:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1038:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
1039:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Activate/deactivate the Quad mode */
1040:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (Operation == QSPI_HIGH_PERF_ENABLE)
1041:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1042:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     SET_BIT(reg[2], MX25R6435F_CR2_LH_SWITCH);
 2653              		.loc 1 1042 0
 2654 02cc 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
1043:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1044:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   else
1045:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1046:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     CLEAR_BIT(reg[2], MX25R6435F_CR2_LH_SWITCH);
1047:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1048:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1049:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = WRITE_STATUS_CFG_REG_CMD;
1050:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 3;
1051:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1052:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2655              		.loc 1 1052 0
 2656 02d0 2048     		ldr	r0, .L184
1049:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 3;
 2657              		.loc 1 1049 0
 2658 02d2 0895     		str	r5, [sp, #32]
ARM GAS  /tmp/ccVjWqsE.s 			page 95


1042:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2659              		.loc 1 1042 0
 2660 02d4 43F00203 		orr	r3, r3, #2
1050:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2661              		.loc 1 1050 0
 2662 02d8 0327     		movs	r7, #3
 2663              		.loc 1 1052 0
 2664 02da 41F28832 		movw	r2, #5000
 2665 02de 08A9     		add	r1, sp, #32
1042:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2666              		.loc 1 1042 0
 2667 02e0 8DF80630 		strb	r3, [sp, #6]
1050:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2668              		.loc 1 1050 0
 2669 02e4 1297     		str	r7, [sp, #72]
 2670              		.loc 1 1052 0
 2671 02e6 FFF7FEFF 		bl	HAL_QSPI_Command
 2672              	.LVL105:
 2673 02ea 0028     		cmp	r0, #0
 2674 02ec 7FF492AE 		bne	.L149
1053:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1054:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1055:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1056:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1057:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Transmit(&QSPIHandle, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2675              		.loc 1 1057 0
 2676 02f0 41F28832 		movw	r2, #5000
 2677 02f4 01A9     		add	r1, sp, #4
 2678 02f6 1748     		ldr	r0, .L184
 2679 02f8 FFF7FEFF 		bl	HAL_QSPI_Transmit
 2680              	.LVL106:
 2681 02fc 0028     		cmp	r0, #0
 2682 02fe 7FF489AE 		bne	.L149
1058:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1059:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1060:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1061:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1062:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Wait that memory is ready */  
1063:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (QSPI_AutoPollingMemReady(&QSPIHandle, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 2683              		.loc 1 1063 0
 2684 0302 41F28830 		movw	r0, #5000
 2685 0306 FFF7FEFF 		bl	QSPI_AutoPollingMemReady.isra.0
 2686              	.LVL107:
 2687 030a 0028     		cmp	r0, #0
 2688 030c 7FF482AE 		bne	.L149
1064:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1065:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1066:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1067:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
1068:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   /* Check the configuration has been correctly done */
1069:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.Instruction = READ_CFG_REG_CMD;
 2689              		.loc 1 1069 0
 2690 0310 1523     		movs	r3, #21
1070:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 2;
1071:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1072:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Command(&QSPIHandle, &sCommand, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2691              		.loc 1 1072 0
ARM GAS  /tmp/ccVjWqsE.s 			page 96


 2692 0312 08A9     		add	r1, sp, #32
 2693 0314 41F28832 		movw	r2, #5000
 2694 0318 0E48     		ldr	r0, .L184
1070:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 2;
 2695              		.loc 1 1070 0
 2696 031a 1296     		str	r6, [sp, #72]
1069:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   sCommand.NbData      = 2;
 2697              		.loc 1 1069 0
 2698 031c 0893     		str	r3, [sp, #32]
 2699              		.loc 1 1072 0
 2700 031e FFF7FEFF 		bl	HAL_QSPI_Command
 2701              	.LVL108:
 2702 0322 0028     		cmp	r0, #0
 2703 0324 7FF476AE 		bne	.L149
1073:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1074:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1075:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1076:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
1077:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if (HAL_QSPI_Receive(&QSPIHandle, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 2704              		.loc 1 1077 0
 2705 0328 01A9     		add	r1, sp, #4
 2706 032a 41F28832 		movw	r2, #5000
 2707 032e 0948     		ldr	r0, .L184
 2708 0330 FFF7FEFF 		bl	HAL_QSPI_Receive
 2709              	.LVL109:
 2710 0334 0028     		cmp	r0, #0
 2711 0336 7FF46DAE 		bne	.L149
1078:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
1079:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     return QSPI_ERROR;
1080:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
1081:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
1082:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   if ((((reg[1] & MX25R6435F_CR2_LH_SWITCH) == 0) && (Operation == QSPI_HIGH_PERF_ENABLE)) ||
 2712              		.loc 1 1082 0
 2713 033a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 2714 033e 9B07     		lsls	r3, r3, #30
 2715 0340 7FF568AE 		bpl	.L149
 2716              	.LVL110:
 2717              	.LBE117:
 2718              	.LBE116:
 170:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2719              		.loc 1 170 0
 2720 0344 0348     		ldr	r0, .L184
 168:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2721              		.loc 1 168 0
 2722 0346 6560     		str	r5, [r4, #4]
 170:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2723              		.loc 1 170 0
 2724 0348 FFF7FEFF 		bl	HAL_QSPI_Init
 2725              	.LVL111:
 130:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2726              		.loc 1 130 0
 2727 034c 0030     		adds	r0, r0, #0
 2728 034e 18BF     		it	ne
 2729 0350 0120     		movne	r0, #1
 2730 0352 60E6     		b	.L164
 2731              	.L185:
 2732              		.align	2
ARM GAS  /tmp/ccVjWqsE.s 			page 97


 2733              	.L184:
 2734 0354 00000000 		.word	QSPIHandle
 2735              		.cfi_endproc
 2736              	.LFE130:
 2738              		.section	.text.BSP_QSPI_MspDeInit,"ax",%progbits
 2739              		.align	1
 2740              		.p2align 2,,3
 2741              		.weak	BSP_QSPI_MspDeInit
 2742              		.syntax unified
 2743              		.thumb
 2744              		.thumb_func
 2745              		.fpu fpv4-sp-d16
 2747              	BSP_QSPI_MspDeInit:
 2748              	.LFB145:
 747:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2749              		.loc 1 747 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 8
 2752              		@ frame_needed = 0, uses_anonymous_args = 0
 2753 0000 10B5     		push	{r4, lr}
 2754              	.LCFI68:
 2755              		.cfi_def_cfa_offset 8
 2756              		.cfi_offset 4, -8
 2757              		.cfi_offset 14, -4
 2758              	.LBB120:
 751:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 2759              		.loc 1 751 0
 2760 0002 0F4C     		ldr	r4, .L188
 2761              	.LBE120:
 755:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 2762              		.loc 1 755 0
 2763 0004 0F48     		ldr	r0, .L188+4
 2764              	.LBB121:
 751:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 2765              		.loc 1 751 0
 2766 0006 E36C     		ldr	r3, [r4, #76]
 2767 0008 43F01003 		orr	r3, r3, #16
 2768 000c E364     		str	r3, [r4, #76]
 2769 000e E36C     		ldr	r3, [r4, #76]
 2770              	.LBE121:
 747:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2771              		.loc 1 747 0
 2772 0010 82B0     		sub	sp, sp, #8
 2773              	.LCFI69:
 2774              		.cfi_def_cfa_offset 16
 2775              	.LBB122:
 751:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 2776              		.loc 1 751 0
 2777 0012 03F01003 		and	r3, r3, #16
 2778 0016 0193     		str	r3, [sp, #4]
 2779              	.LBE122:
 755:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 2780              		.loc 1 755 0
 2781 0018 4FF47C41 		mov	r1, #64512
 2782              	.LBB123:
 751:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   GPIO_InitStruct.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 2783              		.loc 1 751 0
ARM GAS  /tmp/ccVjWqsE.s 			page 98


 2784 001c 019B     		ldr	r3, [sp, #4]
 2785              	.LVL112:
 2786              	.LBE123:
 755:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****     
 2787              		.loc 1 755 0
 2788 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 2789              	.LVL113:
 758:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   __HAL_RCC_QSPI_RELEASE_RESET();
 2790              		.loc 1 758 0
 2791 0022 236B     		ldr	r3, [r4, #48]
 2792 0024 43F48073 		orr	r3, r3, #256
 2793 0028 2363     		str	r3, [r4, #48]
 759:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2794              		.loc 1 759 0
 2795 002a 236B     		ldr	r3, [r4, #48]
 2796 002c 23F48073 		bic	r3, r3, #256
 2797 0030 2363     		str	r3, [r4, #48]
 762:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 2798              		.loc 1 762 0
 2799 0032 236D     		ldr	r3, [r4, #80]
 2800 0034 23F48073 		bic	r3, r3, #256
 2801 0038 2365     		str	r3, [r4, #80]
 763:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2802              		.loc 1 763 0
 2803 003a 02B0     		add	sp, sp, #8
 2804              	.LCFI70:
 2805              		.cfi_def_cfa_offset 8
 2806              		@ sp needed
 2807 003c 10BD     		pop	{r4, pc}
 2808              	.L189:
 2809 003e 00BF     		.align	2
 2810              	.L188:
 2811 0040 00100240 		.word	1073876992
 2812 0044 00100048 		.word	1207963648
 2813              		.cfi_endproc
 2814              	.LFE145:
 2816              		.section	.text.BSP_QSPI_DeInit,"ax",%progbits
 2817              		.align	1
 2818              		.p2align 2,,3
 2819              		.global	BSP_QSPI_DeInit
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu fpv4-sp-d16
 2825              	BSP_QSPI_DeInit:
 2826              	.LFB131:
 183:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 2827              		.loc 1 183 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 184:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 2831              		.loc 1 184 0
 2832 0000 0648     		ldr	r0, .L195
 2833 0002 074B     		ldr	r3, .L195+4
 183:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   QSPIHandle.Instance = QUADSPI;
 2834              		.loc 1 183 0
ARM GAS  /tmp/ccVjWqsE.s 			page 99


 2835 0004 10B5     		push	{r4, lr}
 2836              	.LCFI71:
 2837              		.cfi_def_cfa_offset 8
 2838              		.cfi_offset 4, -8
 2839              		.cfi_offset 14, -4
 184:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 2840              		.loc 1 184 0
 2841 0006 0360     		str	r3, [r0]
 187:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   {
 2842              		.loc 1 187 0
 2843 0008 FFF7FEFF 		bl	HAL_QSPI_DeInit
 2844              	.LVL114:
 2845 000c 08B1     		cbz	r0, .L194
 189:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   }
 2846              		.loc 1 189 0
 2847 000e 0120     		movs	r0, #1
 196:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** 
 2848              		.loc 1 196 0
 2849 0010 10BD     		pop	{r4, pc}
 2850              	.L194:
 2851 0012 0446     		mov	r4, r0
 193:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c ****   
 2852              		.loc 1 193 0
 2853 0014 FFF7FEFF 		bl	BSP_QSPI_MspDeInit
 2854              	.LVL115:
 195:Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.c **** }
 2855              		.loc 1 195 0
 2856 0018 2046     		mov	r0, r4
 2857 001a 10BD     		pop	{r4, pc}
 2858              	.L196:
 2859              		.align	2
 2860              	.L195:
 2861 001c 00000000 		.word	QSPIHandle
 2862 0020 001000A0 		.word	-1610608640
 2863              		.cfi_endproc
 2864              	.LFE131:
 2866              		.comm	QSPIHandle,68,4
 2867              		.text
 2868              	.Letext0:
 2869              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2870              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 2871              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2872              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2873              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 2874              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2875              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2876              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2877              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 2878              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_qspi.h"
 2879              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2880              		.file 14 "Drivers/B-L475E-IOT01/stm32l475e_iot01_qspi.h"
ARM GAS  /tmp/ccVjWqsE.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l475e_iot01_qspi.c
     /tmp/ccVjWqsE.s:18     .text.QSPI_AutoPollingMemReady.isra.0:0000000000000000 $t
     /tmp/ccVjWqsE.s:25     .text.QSPI_AutoPollingMemReady.isra.0:0000000000000000 QSPI_AutoPollingMemReady.isra.0
     /tmp/ccVjWqsE.s:110    .text.QSPI_AutoPollingMemReady.isra.0:000000000000004c $d
                            *COM*:0000000000000044 QSPIHandle
     /tmp/ccVjWqsE.s:115    .text.BSP_QSPI_Read:0000000000000000 $t
     /tmp/ccVjWqsE.s:123    .text.BSP_QSPI_Read:0000000000000000 BSP_QSPI_Read
     /tmp/ccVjWqsE.s:233    .text.BSP_QSPI_Read:0000000000000068 $d
     /tmp/ccVjWqsE.s:238    .text.BSP_QSPI_Write:0000000000000000 $t
     /tmp/ccVjWqsE.s:246    .text.BSP_QSPI_Write:0000000000000000 BSP_QSPI_Write
     /tmp/ccVjWqsE.s:574    .text.BSP_QSPI_Write:0000000000000150 $d
     /tmp/ccVjWqsE.s:579    .text.BSP_QSPI_Erase_Block:0000000000000000 $t
     /tmp/ccVjWqsE.s:587    .text.BSP_QSPI_Erase_Block:0000000000000000 BSP_QSPI_Erase_Block
     /tmp/ccVjWqsE.s:806    .text.BSP_QSPI_Erase_Block:00000000000000e0 $d
     /tmp/ccVjWqsE.s:811    .text.BSP_QSPI_Erase_Sector:0000000000000000 $t
     /tmp/ccVjWqsE.s:819    .text.BSP_QSPI_Erase_Sector:0000000000000000 BSP_QSPI_Erase_Sector
     /tmp/ccVjWqsE.s:997    .text.BSP_QSPI_Erase_Sector:00000000000000ac $d
     /tmp/ccVjWqsE.s:1002   .text.BSP_QSPI_Erase_Chip:0000000000000000 $t
     /tmp/ccVjWqsE.s:1010   .text.BSP_QSPI_Erase_Chip:0000000000000000 BSP_QSPI_Erase_Chip
     /tmp/ccVjWqsE.s:1215   .text.BSP_QSPI_Erase_Chip:00000000000000d4 $d
     /tmp/ccVjWqsE.s:1221   .text.BSP_QSPI_GetStatus:0000000000000000 $t
     /tmp/ccVjWqsE.s:1229   .text.BSP_QSPI_GetStatus:0000000000000000 BSP_QSPI_GetStatus
     /tmp/ccVjWqsE.s:1356   .text.BSP_QSPI_GetStatus:0000000000000098 $d
     /tmp/ccVjWqsE.s:1361   .text.BSP_QSPI_GetInfo:0000000000000000 $t
     /tmp/ccVjWqsE.s:1369   .text.BSP_QSPI_GetInfo:0000000000000000 BSP_QSPI_GetInfo
     /tmp/ccVjWqsE.s:1415   .text.BSP_QSPI_EnableMemoryMappedMode:0000000000000000 $t
     /tmp/ccVjWqsE.s:1423   .text.BSP_QSPI_EnableMemoryMappedMode:0000000000000000 BSP_QSPI_EnableMemoryMappedMode
     /tmp/ccVjWqsE.s:1503   .text.BSP_QSPI_EnableMemoryMappedMode:0000000000000050 $d
     /tmp/ccVjWqsE.s:1508   .text.BSP_QSPI_SuspendErase:0000000000000000 $t
     /tmp/ccVjWqsE.s:1516   .text.BSP_QSPI_SuspendErase:0000000000000000 BSP_QSPI_SuspendErase
     /tmp/ccVjWqsE.s:1681   .text.BSP_QSPI_SuspendErase:00000000000000bc $d
     /tmp/ccVjWqsE.s:1686   .text.BSP_QSPI_ResumeErase:0000000000000000 $t
     /tmp/ccVjWqsE.s:1694   .text.BSP_QSPI_ResumeErase:0000000000000000 BSP_QSPI_ResumeErase
     /tmp/ccVjWqsE.s:1864   .text.BSP_QSPI_ResumeErase:00000000000000b4 $d
     /tmp/ccVjWqsE.s:1871   .text.BSP_QSPI_EnterDeepPowerDown:0000000000000000 $t
     /tmp/ccVjWqsE.s:1879   .text.BSP_QSPI_EnterDeepPowerDown:0000000000000000 BSP_QSPI_EnterDeepPowerDown
     /tmp/ccVjWqsE.s:1937   .text.BSP_QSPI_EnterDeepPowerDown:0000000000000034 $d
     /tmp/ccVjWqsE.s:1942   .text.BSP_QSPI_LeaveDeepPowerDown:0000000000000000 $t
     /tmp/ccVjWqsE.s:1950   .text.BSP_QSPI_LeaveDeepPowerDown:0000000000000000 BSP_QSPI_LeaveDeepPowerDown
     /tmp/ccVjWqsE.s:2005   .text.BSP_QSPI_LeaveDeepPowerDown:0000000000000034 $d
     /tmp/ccVjWqsE.s:2010   .text.BSP_QSPI_MspInit:0000000000000000 $t
     /tmp/ccVjWqsE.s:2018   .text.BSP_QSPI_MspInit:0000000000000000 BSP_QSPI_MspInit
     /tmp/ccVjWqsE.s:2114   .text.BSP_QSPI_MspInit:000000000000005c $d
     /tmp/ccVjWqsE.s:2120   .text.BSP_QSPI_Init:0000000000000000 $t
     /tmp/ccVjWqsE.s:2128   .text.BSP_QSPI_Init:0000000000000000 BSP_QSPI_Init
     /tmp/ccVjWqsE.s:2266   .text.BSP_QSPI_Init:0000000000000078 $d
     /tmp/ccVjWqsE.s:2274   .text.BSP_QSPI_Init:0000000000000080 $t
     /tmp/ccVjWqsE.s:2734   .text.BSP_QSPI_Init:0000000000000354 $d
     /tmp/ccVjWqsE.s:2739   .text.BSP_QSPI_MspDeInit:0000000000000000 $t
     /tmp/ccVjWqsE.s:2747   .text.BSP_QSPI_MspDeInit:0000000000000000 BSP_QSPI_MspDeInit
     /tmp/ccVjWqsE.s:2811   .text.BSP_QSPI_MspDeInit:0000000000000040 $d
     /tmp/ccVjWqsE.s:2817   .text.BSP_QSPI_DeInit:0000000000000000 $t
     /tmp/ccVjWqsE.s:2825   .text.BSP_QSPI_DeInit:0000000000000000 BSP_QSPI_DeInit
     /tmp/ccVjWqsE.s:2861   .text.BSP_QSPI_DeInit:000000000000001c $d
                     .debug_frame:0000000000000010 $d

ARM GAS  /tmp/ccVjWqsE.s 			page 101


UNDEFINED SYMBOLS
HAL_QSPI_AutoPolling
HAL_QSPI_Command
HAL_QSPI_Receive
HAL_QSPI_Transmit
HAL_QSPI_MemoryMapped
HAL_GPIO_Init
HAL_QSPI_DeInit
HAL_QSPI_Init
HAL_GPIO_DeInit
